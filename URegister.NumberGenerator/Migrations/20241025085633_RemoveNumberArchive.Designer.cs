// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using URegister.NumberGenerator.Data;

#nullable disable

namespace URegister.NumberGenerator.Migrations
{
    [DbContext(typeof(NumberGeneratorDbContext))]
    [Migration("20241025085633_RemoveNumberArchive")]
    partial class RemoveNumberArchive
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("URegister.NumberGenerator.Data.Models.Numerator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Prefix")
                        .HasColumnType("integer")
                        .HasColumnName("prefix")
                        .HasComment("Префикс във формат yyddd");

                    b.Property<int>("Sequence")
                        .HasColumnType("integer")
                        .HasColumnName("sequence")
                        .HasComment("Последователност");

                    b.HasKey("Id")
                        .HasName("pk_numerators");

                    b.HasIndex("Prefix")
                        .IsUnique()
                        .HasDatabaseName("ix_numerators_prefix");

                    b.ToTable("numerators", null, t =>
                        {
                            t.HasComment("Номератор на универсалния регистър");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
