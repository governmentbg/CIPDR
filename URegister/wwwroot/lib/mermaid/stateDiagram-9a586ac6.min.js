import{d as db,p as parser,s as styles}from"./styles-a1a6e33f.js";import{line,curveBasis,select}from"d3";import{layout}from"dagre-d3-es/src/dagre/index.js";import*as graphlib from"dagre-d3-es/src/graphlib/index.js";import{c as getConfig,u as utils,e as common,l as log,i as configureSvgSize}from"./mermaid-768dc893.js";import"ts-dedent";import"dayjs";import"@braintree/sanitize-url";import"dompurify";import"khroma";import"lodash-es/memoize.js";import"lodash-es/merge.js";import"stylis";import"lodash-es/isEmpty.js";const idCache={},set=(t,e)=>{idCache[t]=e},get=t=>idCache[t],keys=()=>Object.keys(idCache),size=()=>keys().length,idCache$1={get:get,set:set,keys:keys,size:size},drawStartState=t=>t.append("circle").attr("class","start-state").attr("r",getConfig().state.sizeUnit).attr("cx",getConfig().state.padding+getConfig().state.sizeUnit).attr("cy",getConfig().state.padding+getConfig().state.sizeUnit),drawDivider=t=>t.append("line").style("stroke","grey").style("stroke-dasharray","3").attr("x1",getConfig().state.textHeight).attr("class","divider").attr("x2",2*getConfig().state.textHeight).attr("y1",0).attr("y2",0),drawSimpleState=(t,e)=>{const a=t.append("text").attr("x",2*getConfig().state.padding).attr("y",getConfig().state.textHeight+2*getConfig().state.padding).attr("font-size",getConfig().state.fontSize).attr("class","state-title").text(e.id);e=a.node().getBBox();return t.insert("rect",":first-child").attr("x",getConfig().state.padding).attr("y",getConfig().state.padding).attr("width",e.width+2*getConfig().state.padding).attr("height",e.height+2*getConfig().state.padding).attr("rx",getConfig().state.radius),a},drawDescrState=(t,e)=>{const a=t.append("text").attr("x",2*getConfig().state.padding).attr("y",getConfig().state.textHeight+1.3*getConfig().state.padding).attr("font-size",getConfig().state.fontSize).attr("class","state-title").text(e.descriptions[0]);var i=a.node().getBBox(),n=i.height;const r=t.append("text").attr("x",getConfig().state.padding).attr("y",n+.4*getConfig().state.padding+getConfig().state.dividerMargin+getConfig().state.textHeight).attr("class","state-description");let o=!0,d=!0;e.descriptions.forEach(function(t){if(!o){{var e=r;var a=d;const i=e.append("tspan").attr("x",2*getConfig().state.padding).text(t);a||i.attr("dy",getConfig().state.textHeight)}d=!1}o=!1});const g=t.append("line").attr("x1",getConfig().state.padding).attr("y1",getConfig().state.padding+n+getConfig().state.dividerMargin/2).attr("y2",getConfig().state.padding+n+getConfig().state.dividerMargin/2).attr("class","descr-divider");e=r.node().getBBox(),i=Math.max(e.width,i.width);return g.attr("x2",i+3*getConfig().state.padding),t.insert("rect",":first-child").attr("x",getConfig().state.padding).attr("y",getConfig().state.padding).attr("width",i+2*getConfig().state.padding).attr("height",e.height+n+2*getConfig().state.padding).attr("rx",getConfig().state.radius),t},addTitleAndBox=(t,e,a)=>{var i=getConfig().state.padding,n=2*getConfig().state.padding,r=t.node().getBBox(),o=r.width,r=r.x;const d=t.append("text").attr("x",0).attr("y",getConfig().state.titleShift).attr("font-size",getConfig().state.fontSize).attr("class","state-title").text(e.id);var g=d.node().getBBox().width+n;let s=Math.max(g,o);s===o&&(s+=n);let c;var f=t.node().getBBox(),e=(e.doc,c=r-i,o<g&&(c=(o-s)/2+i),Math.abs(r-f.x)<i&&o<g&&(c=r-(g-o)/2),1-getConfig().state.textHeight);return t.insert("rect",":first-child").attr("x",c).attr("y",e).attr("class",a?"alt-composit":"composit").attr("width",s).attr("height",f.height+getConfig().state.textHeight+getConfig().state.titleShift+1).attr("rx","0"),d.attr("x",c+i),g<=o&&d.attr("x",r+(s-n)/2-g/2+i),t.insert("rect",":first-child").attr("x",c).attr("y",getConfig().state.titleShift-getConfig().state.textHeight-getConfig().state.padding).attr("width",s).attr("height",3*getConfig().state.textHeight).attr("rx",getConfig().state.radius),t.insert("rect",":first-child").attr("x",c).attr("y",getConfig().state.titleShift-getConfig().state.textHeight-getConfig().state.padding).attr("width",s).attr("height",f.height+3+2*getConfig().state.textHeight).attr("rx",getConfig().state.radius),t},drawEndState=t=>(t.append("circle").attr("class","end-state-outer").attr("r",getConfig().state.sizeUnit+getConfig().state.miniPadding).attr("cx",getConfig().state.padding+getConfig().state.sizeUnit+getConfig().state.miniPadding).attr("cy",getConfig().state.padding+getConfig().state.sizeUnit+getConfig().state.miniPadding),t.append("circle").attr("class","end-state-inner").attr("r",getConfig().state.sizeUnit).attr("cx",getConfig().state.padding+getConfig().state.sizeUnit+2).attr("cy",getConfig().state.padding+getConfig().state.sizeUnit+2)),drawForkJoinState=(t,e)=>{let a=getConfig().state.forkWidth,i=getConfig().state.forkHeight;return e.parentId&&(e=a,a=i,i=e),t.append("rect").style("stroke","black").style("fill","black").attr("width",a).attr("height",i).attr("x",getConfig().state.padding).attr("y",getConfig().state.padding)},_drawLongText=(t,e,a,i)=>{let n=0;const r=i.append("text");r.style("text-anchor","start"),r.attr("class","noteText");let o=t.replace(/\r\n/g,"<br/>");i=(o=o.replace(/\n/g,"<br/>")).split(common.lineBreakRegex);let d=1.25*getConfig().state.noteMargin;for(const s of i){var g=s.trim();if(0<g.length){const c=r.append("tspan");c.text(g),0===d&&(g=c.node().getBBox(),d+=g.height),n+=d,c.attr("x",e+getConfig().state.noteMargin),c.attr("y",a+n+1.25*getConfig().state.noteMargin)}}return{textWidth:r.node().getBBox().width,textHeight:n}},drawNote=(t,e)=>{e.attr("class","state-note");const a=e.append("rect").attr("x",0).attr("y",getConfig().state.padding);var e=e.append("g"),{textWidth:t,textHeight:e}=_drawLongText(t,0,0,e);return a.attr("height",e+2*getConfig().state.noteMargin),a.attr("width",t+2*getConfig().state.noteMargin),a},drawState=function(t,e){var a=e.id;const i={id:a,label:e.id,width:0,height:0},n=t.append("g").attr("id",a).attr("class","stateGroup");"start"===e.type&&drawStartState(n),"end"===e.type&&drawEndState(n),"fork"!==e.type&&"join"!==e.type||drawForkJoinState(n,e),"note"===e.type&&drawNote(e.note.text,n),"divider"===e.type&&drawDivider(n),"default"===e.type&&0===e.descriptions.length&&drawSimpleState(n,e),"default"===e.type&&0<e.descriptions.length&&drawDescrState(n,e);t=n.node().getBBox();return i.width=t.width+2*getConfig().state.padding,i.height=t.height+2*getConfig().state.padding,idCache$1.set(a,i),i};let edgeCount=0;const drawEdge=function(n,r,o){r.points=r.points.filter(t=>!Number.isNaN(t.y));var d=r.points;const t=line().x(function(t){return t.x}).y(function(t){return t.y}).curve(curveBasis),e=n.append("path").attr("d",t(d)).attr("id","edge"+edgeCount).attr("class","transition");let a="";if(getConfig().state.arrowMarkerAbsolute&&(a=(a=(a=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search).replace(/\(/g,"\\(")).replace(/\)/g,"\\)")),e.attr("marker-end","url("+a+"#"+function(t){switch(t){case db.relationType.AGGREGATION:return"aggregation";case db.relationType.EXTENSION:return"extension";case db.relationType.COMPOSITION:return"composition";case db.relationType.DEPENDENCY:return"dependency"}}(db.relationType.DEPENDENCY)+"End)"),void 0!==o.title){const c=n.append("g").attr("class","stateLabel"),{x:f,y:p}=utils.calcLabelPosition(r.points);var g=common.getRows(o.title);let a=0;const l=[];let e=0,i=0;for(let t=0;t<=g.length;t++){const h=c.append("text").attr("text-anchor","middle").text(g[t]).attr("x",f).attr("y",p+a);var s=h.node().getBBox();e=Math.max(e,s.width),i=Math.min(i,s.x),log.info(s.x,f,p+a),0===a&&(s=h.node().getBBox(),a=s.height,log.info("Title height",a,p)),l.push(h)}let t=a*g.length;if(1<g.length){const x=(g.length-1)*a*.5;l.forEach((t,e)=>t.attr("y",p+e*a-x)),t=a*g.length}d=c.node().getBBox();c.insert("rect",":first-child").attr("class","box").attr("x",f-e/2-getConfig().state.padding/2).attr("y",p-t/2-getConfig().state.padding/2-3.5).attr("width",e+getConfig().state.padding).attr("height",t+getConfig().state.padding),log.info(d)}edgeCount++};let conf;const transformationLog={},setConf=function(){},insertMarkers=function(t){t.append("defs").append("marker").attr("id","dependencyEnd").attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 19,7 L9,13 L14,7 L9,1 Z")},draw=function(t,e,a,i){conf=getConfig().state;var n=getConfig().securityLevel;let r;"sandbox"===n&&(r=select("#i"+e));const o=select("sandbox"===n?r.nodes()[0].contentDocument.body:"body");n="sandbox"===n?r.nodes()[0].contentDocument:document;log.debug("Rendering diagram "+t);const d=o.select(`[id='${e}']`);insertMarkers(d);t=i.db.getRootDoc(),renderDoc(t,d,void 0,!1,o,n,i),e=conf.padding,t=d.node().getBBox(),n=t.width+2*e,i=t.height+2*e;configureSvgSize(d,i,1.75*n,conf.useMaxWidth),d.attr("viewBox",`${t.x-conf.padding}  ${t.y-conf.padding} `+n+" "+i)},getLabelWidth=t=>t?t.length*conf.fontSizeFactor:1,renderDoc=(t,a,i,n,r,o,d)=>{const g=new graphlib.Graph({compound:!0,multigraph:!0});let e,s=!0;for(e=0;e<t.length;e++)if("relation"===t[e].stmt){s=!1;break}i?g.setGraph({rankdir:"LR",multigraph:!0,compound:!0,ranker:"tight-tree",ranksep:s?1:conf.edgeLengthFactor,nodeSep:s?1:50,isMultiGraph:!0}):g.setGraph({rankdir:"TB",multigraph:!0,compound:!0,ranksep:s?1:conf.edgeLengthFactor,nodeSep:s?1:50,ranker:"tight-tree",isMultiGraph:!0}),g.setDefaultEdgeLabel(function(){return{}}),d.db.extract(t);var c,f=d.db.getStates();const p=d.db.getRelations();for(const m of Object.keys(f)){const y=f[m];i&&(y.parentId=i);let e;if(y.doc){let t=a.append("g").attr("id",y.id).attr("class","stateGroup");e=renderDoc(y.doc,t,y.id,!n,r,o,d);var l=(t=addTitleAndBox(t,y,n)).node().getBBox();e.width=l.width,e.height=l.height+conf.padding/2,transformationLog[y.id]={y:conf.compositTitleSize}}else e=drawState(a,y);y.note?(l={descriptions:[],id:y.id+"-note",note:y.note,type:"note"},c=drawState(a,l),"left of"===y.note.position?(g.setNode(e.id+"-note",c),g.setNode(e.id,e)):(g.setNode(e.id,e),g.setNode(e.id+"-note",c)),g.setParent(e.id,e.id+"-group"),g.setParent(e.id+"-note",e.id+"-group")):g.setNode(e.id,e)}log.debug("Count=",g.nodeCount(),g);let h=0;p.forEach(function(t){h++,log.debug("Setting edge",t),g.setEdge(t.id1,t.id2,{relation:t,width:getLabelWidth(t.title),height:conf.labelHeight*common.getRows(t.title).length,labelpos:"c"},"id"+h)}),layout(g),log.debug("Graph after layout",g.nodes());const x=a.node();g.nodes().forEach(function(t){if(void 0!==t&&void 0!==g.node(t)){log.warn("Node "+t+": "+JSON.stringify(g.node(t))),r.select("#"+x.id+" #"+t).attr("transform","translate("+(g.node(t).x-g.node(t).width/2)+","+(g.node(t).y+(transformationLog[t]?transformationLog[t].y:0)-g.node(t).height/2)+" )"),r.select("#"+x.id+" #"+t).attr("data-x-shift",g.node(t).x-g.node(t).width/2);const e=o.querySelectorAll("#"+x.id+" #"+t+" .divider");e.forEach(t=>{const e=t.parentElement;let a=0,i=0;e&&(e.parentElement&&(a=e.parentElement.getBBox().width),i=parseInt(e.getAttribute("data-x-shift"),10),Number.isNaN(i)&&(i=0)),t.setAttribute("x1",0-i+8),t.setAttribute("x2",a-i-8)})}else log.debug("No Node "+t+": "+JSON.stringify(g.node(t)))});var C;x.getBBox();g.edges().forEach(function(t){void 0!==t&&void 0!==g.edge(t)&&(log.debug("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(g.edge(t))),drawEdge(a,g.edge(t),g.edge(t).relation))}),C=x.getBBox();const u={id:i||"root",label:i||"root",width:0,height:0};return u.width=C.width+2*conf.padding,u.height=C.height+2*conf.padding,log.debug("Doc rendered",u,g),u},renderer={setConf:setConf,draw:draw},diagram={parser:parser,db:db,renderer:renderer,styles:styles,init:t=>{t.state||(t.state={}),t.state.arrowMarkerAbsolute=t.arrowMarkerAbsolute,db.clear()}};export{diagram};