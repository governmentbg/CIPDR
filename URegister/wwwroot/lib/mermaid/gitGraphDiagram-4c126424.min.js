import{c as I,s as Oe,g as Ie,a as Ge,b as Pe,D as Ne,E as He,m as De,l as N,f as V,F as Be,I as Ve,J as fe,j as ze,A as je,K as qe}from"./mermaid-d733041c.js";var pe=function(){function t(t,e,r,i){for(r=r||{},i=t.length;i--;r[t[i]]=e);return r}var e=[1,4],r=[1,7],i=[1,5],a=[1,9],c=[1,6],s=[2,6],n=[1,16],o=[6,8,14,20,22,24,25,27,29,32,37,40,50,55],l=[8,14,20,22,24,25,27,29,32,37,40],h=[8,13,14,20,22,24,25,27,29,32,37,40],m=[1,26],u=[6,8,14,50,55],y=[8,14,55],p=[1,53],g=[1,52],b=[8,14,30,33,35,38,55],d=[1,67],f=[1,68],k=[1,69],$=[8,14,33,35,42,55],e={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,directive:5,GG:6,document:7,EOF:8,":":9,DIR:10,options:11,body:12,OPT:13,NL:14,line:15,statement:16,commitStatement:17,mergeStatement:18,cherryPickStatement:19,acc_title:20,acc_title_value:21,acc_descr:22,acc_descr_value:23,acc_descr_multiline_value:24,section:25,branchStatement:26,CHECKOUT:27,ref:28,BRANCH:29,ORDER:30,NUM:31,CHERRY_PICK:32,COMMIT_ID:33,STR:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,openDirective:46,typeDirective:47,closeDirective:48,argDirective:49,open_directive:50,type_directive:51,arg_directive:52,close_directive:53,ID:54,";":55,$accept:0,$end:1},terminals_:{2:"error",6:"GG",8:"EOF",9:":",10:"DIR",13:"OPT",14:"NL",20:"acc_title",21:"acc_title_value",22:"acc_descr",23:"acc_descr_value",24:"acc_descr_multiline_value",25:"section",27:"CHECKOUT",29:"BRANCH",30:"ORDER",31:"NUM",32:"CHERRY_PICK",33:"COMMIT_ID",34:"STR",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",50:"open_directive",51:"type_directive",52:"arg_directive",53:"close_directive",54:"ID",55:";"},productions_:[0,[3,2],[3,2],[3,3],[3,4],[3,5],[7,0],[7,2],[11,2],[11,1],[12,0],[12,2],[15,2],[15,1],[16,1],[16,1],[16,1],[16,2],[16,2],[16,1],[16,1],[16,1],[16,2],[26,2],[26,4],[19,3],[19,5],[19,5],[19,5],[19,5],[18,2],[18,4],[18,4],[18,4],[18,6],[18,6],[18,6],[18,6],[18,6],[18,6],[18,8],[18,8],[18,8],[18,8],[18,8],[18,8],[17,2],[17,3],[17,3],[17,5],[17,5],[17,3],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,3],[17,5],[17,5],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[41,0],[41,1],[39,1],[39,1],[39,1],[5,3],[5,5],[46,1],[47,1],[49,1],[48,1],[28,1],[28,1],[4,1],[4,1],[4,1]],performAction:function(t,e,r,i,a,c,s){var n=c.length-1;switch(a){case 3:return c[n];case 4:return c[n-1];case 5:return i.setDirection(c[n-3]),c[n-1];case 7:i.setOptions(c[n-1]),this.$=c[n];break;case 8:c[n-1]+=c[n],this.$=c[n-1];break;case 10:this.$=[];break;case 11:c[n-1].push(c[n]),this.$=c[n-1];break;case 12:this.$=c[n-1];break;case 17:this.$=c[n].trim(),i.setAccTitle(this.$);break;case 18:case 19:this.$=c[n].trim(),i.setAccDescription(this.$);break;case 20:i.addSection(c[n].substr(8)),this.$=c[n].substr(8);break;case 22:i.checkout(c[n]);break;case 23:i.branch(c[n]);break;case 24:i.branch(c[n-2],c[n]);break;case 25:i.cherryPick(c[n],"",void 0);break;case 26:i.cherryPick(c[n-2],"",c[n]);break;case 27:case 29:i.cherryPick(c[n-2],"","");break;case 28:i.cherryPick(c[n],"",c[n-2]);break;case 30:i.merge(c[n],"","","");break;case 31:i.merge(c[n-2],c[n],"","");break;case 32:i.merge(c[n-2],"",c[n],"");break;case 33:i.merge(c[n-2],"","",c[n]);break;case 34:i.merge(c[n-4],c[n],"",c[n-2]);break;case 35:i.merge(c[n-4],"",c[n],c[n-2]);break;case 36:i.merge(c[n-4],"",c[n-2],c[n]);break;case 37:i.merge(c[n-4],c[n-2],c[n],"");break;case 38:i.merge(c[n-4],c[n-2],"",c[n]);break;case 39:i.merge(c[n-4],c[n],c[n-2],"");break;case 40:i.merge(c[n-6],c[n-4],c[n-2],c[n]);break;case 41:i.merge(c[n-6],c[n],c[n-4],c[n-2]);break;case 42:i.merge(c[n-6],c[n-4],c[n],c[n-2]);break;case 43:i.merge(c[n-6],c[n-2],c[n-4],c[n]);break;case 44:i.merge(c[n-6],c[n],c[n-2],c[n-4]);break;case 45:i.merge(c[n-6],c[n-2],c[n],c[n-4]);break;case 46:i.commit(c[n]);break;case 47:i.commit("","",i.commitType.NORMAL,c[n]);break;case 48:i.commit("","",c[n],"");break;case 49:i.commit("","",c[n],c[n-2]);break;case 50:i.commit("","",c[n-2],c[n]);break;case 51:i.commit("",c[n],i.commitType.NORMAL,"");break;case 52:i.commit("",c[n-2],i.commitType.NORMAL,c[n]);break;case 53:i.commit("",c[n],i.commitType.NORMAL,c[n-2]);break;case 54:i.commit("",c[n-2],c[n],"");break;case 55:i.commit("",c[n],c[n-2],"");break;case 56:i.commit("",c[n-4],c[n-2],c[n]);break;case 57:i.commit("",c[n-4],c[n],c[n-2]);break;case 58:i.commit("",c[n-2],c[n-4],c[n]);break;case 59:i.commit("",c[n],c[n-4],c[n-2]);break;case 60:i.commit("",c[n],c[n-2],c[n-4]);break;case 61:i.commit("",c[n-2],c[n],c[n-4]);break;case 62:i.commit(c[n],"",i.commitType.NORMAL,"");break;case 63:i.commit(c[n],"",i.commitType.NORMAL,c[n-2]);break;case 64:i.commit(c[n-2],"",i.commitType.NORMAL,c[n]);break;case 65:i.commit(c[n-2],"",c[n],"");break;case 66:i.commit(c[n],"",c[n-2],"");break;case 67:i.commit(c[n],c[n-2],i.commitType.NORMAL,"");break;case 68:i.commit(c[n-2],c[n],i.commitType.NORMAL,"");break;case 69:i.commit(c[n-4],"",c[n-2],c[n]);break;case 70:i.commit(c[n-4],"",c[n],c[n-2]);break;case 71:i.commit(c[n-2],"",c[n-4],c[n]);break;case 72:i.commit(c[n],"",c[n-4],c[n-2]);break;case 73:i.commit(c[n],"",c[n-2],c[n-4]);break;case 74:i.commit(c[n-2],"",c[n],c[n-4]);break;case 75:i.commit(c[n-4],c[n],c[n-2],"");break;case 76:i.commit(c[n-4],c[n-2],c[n],"");break;case 77:i.commit(c[n-2],c[n],c[n-4],"");break;case 78:i.commit(c[n],c[n-2],c[n-4],"");break;case 79:i.commit(c[n],c[n-4],c[n-2],"");break;case 80:i.commit(c[n-2],c[n-4],c[n],"");break;case 81:i.commit(c[n-4],c[n],i.commitType.NORMAL,c[n-2]);break;case 82:i.commit(c[n-4],c[n-2],i.commitType.NORMAL,c[n]);break;case 83:i.commit(c[n-2],c[n],i.commitType.NORMAL,c[n-4]);break;case 84:i.commit(c[n],c[n-2],i.commitType.NORMAL,c[n-4]);break;case 85:i.commit(c[n],c[n-4],i.commitType.NORMAL,c[n-2]);break;case 86:i.commit(c[n-2],c[n-4],i.commitType.NORMAL,c[n]);break;case 87:i.commit(c[n-6],c[n-4],c[n-2],c[n]);break;case 88:i.commit(c[n-6],c[n-4],c[n],c[n-2]);break;case 89:i.commit(c[n-6],c[n-2],c[n-4],c[n]);break;case 90:i.commit(c[n-6],c[n],c[n-4],c[n-2]);break;case 91:i.commit(c[n-6],c[n-2],c[n],c[n-4]);break;case 92:i.commit(c[n-6],c[n],c[n-2],c[n-4]);break;case 93:i.commit(c[n-4],c[n-6],c[n-2],c[n]);break;case 94:i.commit(c[n-4],c[n-6],c[n],c[n-2]);break;case 95:i.commit(c[n-2],c[n-6],c[n-4],c[n]);break;case 96:i.commit(c[n],c[n-6],c[n-4],c[n-2]);break;case 97:i.commit(c[n-2],c[n-6],c[n],c[n-4]);break;case 98:i.commit(c[n],c[n-6],c[n-2],c[n-4]);break;case 99:i.commit(c[n],c[n-4],c[n-2],c[n-6]);break;case 100:i.commit(c[n-2],c[n-4],c[n],c[n-6]);break;case 101:i.commit(c[n],c[n-2],c[n-4],c[n-6]);break;case 102:i.commit(c[n-2],c[n],c[n-4],c[n-6]);break;case 103:i.commit(c[n-4],c[n-2],c[n],c[n-6]);break;case 104:i.commit(c[n-4],c[n],c[n-2],c[n-6]);break;case 105:i.commit(c[n-2],c[n-4],c[n-6],c[n]);break;case 106:i.commit(c[n],c[n-4],c[n-6],c[n-2]);break;case 107:i.commit(c[n-2],c[n],c[n-6],c[n-4]);break;case 108:i.commit(c[n],c[n-2],c[n-6],c[n-4]);break;case 109:i.commit(c[n-4],c[n-2],c[n-6],c[n]);break;case 110:i.commit(c[n-4],c[n],c[n-6],c[n-2]);break;case 111:this.$="";break;case 112:this.$=c[n];break;case 113:this.$=i.commitType.NORMAL;break;case 114:this.$=i.commitType.REVERSE;break;case 115:this.$=i.commitType.HIGHLIGHT;break;case 118:i.parseDirective("%%{","open_directive");break;case 119:i.parseDirective(c[n],"type_directive");break;case 120:c[n]=c[n].trim().replace(/'/g,'"'),i.parseDirective(c[n],"arg_directive");break;case 121:i.parseDirective("}%%","close_directive","gitGraph")}},table:[{3:1,4:2,5:3,6:e,8:r,14:i,46:8,50:a,55:c},{1:[3]},{3:10,4:2,5:3,6:e,8:r,14:i,46:8,50:a,55:c},{3:11,4:2,5:3,6:e,8:r,14:i,46:8,50:a,55:c},{7:12,8:s,9:[1,13],10:[1,14],11:15,14:n},t(o,[2,124]),t(o,[2,125]),t(o,[2,126]),{47:17,51:[1,18]},{51:[2,118]},{1:[2,1]},{1:[2,2]},{8:[1,19]},{7:20,8:s,11:15,14:n},{9:[1,21]},t(l,[2,10],{12:22,13:[1,23]}),t(h,[2,9]),{9:[1,25],48:24,53:m},t([9,53],[2,119]),{1:[2,3]},{8:[1,27]},{7:28,8:s,11:15,14:n},{8:[2,7],14:[1,31],15:29,16:30,17:32,18:33,19:34,20:[1,35],22:[1,36],24:[1,37],25:[1,38],26:39,27:[1,40],29:[1,44],32:[1,43],37:[1,42],40:[1,41]},t(h,[2,8]),t(u,[2,116]),{49:45,52:[1,46]},t(u,[2,121]),{1:[2,4]},{8:[1,47]},t(l,[2,11]),{4:48,8:r,14:i,55:c},t(l,[2,13]),t(y,[2,14]),t(y,[2,15]),t(y,[2,16]),{21:[1,49]},{23:[1,50]},t(y,[2,19]),t(y,[2,20]),t(y,[2,21]),{28:51,34:p,54:g},t(y,[2,111],{41:54,33:[1,57],34:[1,59],35:[1,55],38:[1,56],42:[1,58]}),{28:60,34:p,54:g},{33:[1,61],35:[1,62]},{28:63,34:p,54:g},{48:64,53:m},{53:[2,120]},{1:[2,5]},t(l,[2,12]),t(y,[2,17]),t(y,[2,18]),t(y,[2,22]),t(b,[2,122]),t(b,[2,123]),t(y,[2,46]),{34:[1,65]},{39:66,43:d,44:f,45:k},{34:[1,70]},{34:[1,71]},t(y,[2,112]),t(y,[2,30],{33:[1,72],35:[1,74],38:[1,73]}),{34:[1,75]},{34:[1,76],36:[1,77]},t(y,[2,23],{30:[1,78]}),t(u,[2,117]),t(y,[2,47],{33:[1,80],38:[1,79],42:[1,81]}),t(y,[2,48],{33:[1,83],35:[1,82],42:[1,84]}),t($,[2,113]),t($,[2,114]),t($,[2,115]),t(y,[2,51],{35:[1,85],38:[1,86],42:[1,87]}),t(y,[2,62],{33:[1,90],35:[1,88],38:[1,89]}),{34:[1,91]},{39:92,43:d,44:f,45:k},{34:[1,93]},t(y,[2,25],{35:[1,94]}),{33:[1,95]},{33:[1,96]},{31:[1,97]},{39:98,43:d,44:f,45:k},{34:[1,99]},{34:[1,100]},{34:[1,101]},{34:[1,102]},{34:[1,103]},{34:[1,104]},{39:105,43:d,44:f,45:k},{34:[1,106]},{34:[1,107]},{39:108,43:d,44:f,45:k},{34:[1,109]},t(y,[2,31],{35:[1,111],38:[1,110]}),t(y,[2,32],{33:[1,113],35:[1,112]}),t(y,[2,33],{33:[1,114],38:[1,115]}),{34:[1,116],36:[1,117]},{34:[1,118]},{34:[1,119]},t(y,[2,24]),t(y,[2,49],{33:[1,120],42:[1,121]}),t(y,[2,53],{38:[1,122],42:[1,123]}),t(y,[2,63],{33:[1,125],38:[1,124]}),t(y,[2,50],{33:[1,126],42:[1,127]}),t(y,[2,55],{35:[1,128],42:[1,129]}),t(y,[2,66],{33:[1,131],35:[1,130]}),t(y,[2,52],{38:[1,132],42:[1,133]}),t(y,[2,54],{35:[1,134],42:[1,135]}),t(y,[2,67],{35:[1,137],38:[1,136]}),t(y,[2,64],{33:[1,139],38:[1,138]}),t(y,[2,65],{33:[1,141],35:[1,140]}),t(y,[2,68],{35:[1,143],38:[1,142]}),{39:144,43:d,44:f,45:k},{34:[1,145]},{34:[1,146]},{34:[1,147]},{34:[1,148]},{39:149,43:d,44:f,45:k},t(y,[2,26]),t(y,[2,27]),t(y,[2,28]),t(y,[2,29]),{34:[1,150]},{34:[1,151]},{39:152,43:d,44:f,45:k},{34:[1,153]},{39:154,43:d,44:f,45:k},{34:[1,155]},{34:[1,156]},{34:[1,157]},{34:[1,158]},{34:[1,159]},{34:[1,160]},{34:[1,161]},{39:162,43:d,44:f,45:k},{34:[1,163]},{34:[1,164]},{34:[1,165]},{39:166,43:d,44:f,45:k},{34:[1,167]},{39:168,43:d,44:f,45:k},{34:[1,169]},{34:[1,170]},{34:[1,171]},{39:172,43:d,44:f,45:k},{34:[1,173]},t(y,[2,37],{35:[1,174]}),t(y,[2,38],{38:[1,175]}),t(y,[2,36],{33:[1,176]}),t(y,[2,39],{35:[1,177]}),t(y,[2,34],{38:[1,178]}),t(y,[2,35],{33:[1,179]}),t(y,[2,60],{42:[1,180]}),t(y,[2,73],{33:[1,181]}),t(y,[2,61],{42:[1,182]}),t(y,[2,84],{38:[1,183]}),t(y,[2,74],{33:[1,184]}),t(y,[2,83],{38:[1,185]}),t(y,[2,59],{42:[1,186]}),t(y,[2,72],{33:[1,187]}),t(y,[2,58],{42:[1,188]}),t(y,[2,78],{35:[1,189]}),t(y,[2,71],{33:[1,190]}),t(y,[2,77],{35:[1,191]}),t(y,[2,57],{42:[1,192]}),t(y,[2,85],{38:[1,193]}),t(y,[2,56],{42:[1,194]}),t(y,[2,79],{35:[1,195]}),t(y,[2,80],{35:[1,196]}),t(y,[2,86],{38:[1,197]}),t(y,[2,70],{33:[1,198]}),t(y,[2,81],{38:[1,199]}),t(y,[2,69],{33:[1,200]}),t(y,[2,75],{35:[1,201]}),t(y,[2,76],{35:[1,202]}),t(y,[2,82],{38:[1,203]}),{34:[1,204]},{39:205,43:d,44:f,45:k},{34:[1,206]},{34:[1,207]},{39:208,43:d,44:f,45:k},{34:[1,209]},{34:[1,210]},{34:[1,211]},{34:[1,212]},{39:213,43:d,44:f,45:k},{34:[1,214]},{39:215,43:d,44:f,45:k},{34:[1,216]},{34:[1,217]},{34:[1,218]},{34:[1,219]},{34:[1,220]},{34:[1,221]},{34:[1,222]},{39:223,43:d,44:f,45:k},{34:[1,224]},{34:[1,225]},{34:[1,226]},{39:227,43:d,44:f,45:k},{34:[1,228]},{39:229,43:d,44:f,45:k},{34:[1,230]},{34:[1,231]},{34:[1,232]},{39:233,43:d,44:f,45:k},t(y,[2,40]),t(y,[2,42]),t(y,[2,41]),t(y,[2,43]),t(y,[2,45]),t(y,[2,44]),t(y,[2,101]),t(y,[2,102]),t(y,[2,99]),t(y,[2,100]),t(y,[2,104]),t(y,[2,103]),t(y,[2,108]),t(y,[2,107]),t(y,[2,106]),t(y,[2,105]),t(y,[2,110]),t(y,[2,109]),t(y,[2,98]),t(y,[2,97]),t(y,[2,96]),t(y,[2,95]),t(y,[2,93]),t(y,[2,94]),t(y,[2,92]),t(y,[2,91]),t(y,[2,90]),t(y,[2,89]),t(y,[2,87]),t(y,[2,88])],defaultActions:{9:[2,118],10:[2,1],11:[2,2],19:[2,3],27:[2,4],46:[2,120],47:[2,5]},parseError:function(t,e){var r;if(!e.recoverable)throw(r=new Error(t)).hash=e,r;this.trace(t)},parse:function(t){var e,r=this,i=[0],a=[],c=[null],s=[],n=this.table,o="",l=0,h=0,m=1,u=s.slice.call(arguments,1),y=Object.create(this.lexer),p={yy:{}};for(e in this.yy)Object.prototype.hasOwnProperty.call(this.yy,e)&&(p.yy[e]=this.yy[e]);y.setInput(t,p.yy),p.yy.lexer=y,p.yy.parser=this,"u"<typeof y.yylloc&&(y.yylloc={});var g=y.yylloc,b=(s.push(g),y.options&&y.options.ranges);"function"==typeof p.yy.parseError?this.parseError=p.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var d,f,k,$,_,x,v={};;){if(f=i[i.length-1],"u"<typeof(k=this.defaultActions[f]||((null===d||"u"<typeof d)&&(E=void 0,"number"!=typeof(E=a.pop()||y.lex()||m)&&(E instanceof Array&&(E=(a=E).pop()),E=r.symbols_[E]||E),d=E),n[f]&&n[f][d]))||!k.length||!k[0]){var E="",L=[];for($ in n[f])this.terminals_[$]&&2<$&&L.push("'"+this.terminals_[$]+"'");E=y.showPosition?"Parse error on line "+(l+1)+`:
`+y.showPosition()+`
Expecting `+L.join(", ")+", got '"+(this.terminals_[d]||d)+"'":"Parse error on line "+(l+1)+": Unexpected "+(d==m?"end of input":"'"+(this.terminals_[d]||d)+"'"),this.parseError(E,{text:y.match,token:this.terminals_[d]||d,line:y.yylineno,loc:g,expected:L})}if(k[0]instanceof Array&&1<k.length)throw new Error("Parse Error: multiple actions possible at state: "+f+", token: "+d);switch(k[0]){case 1:i.push(d),c.push(y.yytext),s.push(y.yylloc),i.push(k[1]),d=null,h=y.yyleng,o=y.yytext,l=y.yylineno,g=y.yylloc;break;case 2:if(_=this.productions_[k[1]][1],v.$=c[c.length-_],v._$={first_line:s[s.length-(_||1)].first_line,last_line:s[s.length-1].last_line,first_column:s[s.length-(_||1)].first_column,last_column:s[s.length-1].last_column},b&&(v._$.range=[s[s.length-(_||1)].range[0],s[s.length-1].range[1]]),typeof(x=this.performAction.apply(v,[o,h,l,p.yy,k[1],c,s].concat(u)))<"u")return x;_&&(i=i.slice(0,-1*_*2),c=c.slice(0,-1*_),s=s.slice(0,-1*_)),i.push(this.productions_[k[1]][0]),c.push(v.$),s.push(v._$),x=n[i[i.length-2]][i[i.length-1]],i.push(x);break;case 3:return!0}}return!0}};function _(){this.yy={}}return e.lexer={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,r=t.split(/(?:\r\n?|\n)/g),t=(this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e,this.match.split(/(?:\r\n?|\n)/g)),i=(this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),r.length-1&&(this.yylineno-=r.length-1),this.yylloc.range);return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:r?(r.length===t.length?this.yylloc.first_column:0)+t[t.length-r.length].length-r[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(20<t.length?"...":"")+t.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(20<t.length?"...":"")).replace(/\n/g,"")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join("-");return t+this.upcomingInput()+`
`+e+"^"},test_match:function(t,e){var r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],r=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),r)return r;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,r,i;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var a=this._currentRules(),c=0;c<a.length;c++)if((r=this._input.match(this.rules[a[c]]))&&(!e||r[0].length>e[0].length)){if(e=r,i=c,this.options.backtrack_lexer){if(!1!==(t=this.test_match(r,a[c])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,a[i]))&&t:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){return this.next()||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return 0<this.conditionStack.length-1?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]]:this.conditions.INITIAL).rules},topState:function(t){return 0<=(t=this.conditionStack.length-1-Math.abs(t||0))?this.conditionStack[t]:"INITIAL"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(t,e,r,i){switch(r){case 0:return this.begin("open_directive"),50;case 1:return this.begin("type_directive"),51;case 2:return this.popState(),this.begin("arg_directive"),9;case 3:return this.popState(),this.popState(),53;case 4:return 52;case 5:return this.begin("acc_title"),20;case 6:return this.popState(),"acc_title_value";case 7:return this.begin("acc_descr"),22;case 8:return this.popState(),"acc_descr_value";case 9:this.begin("acc_descr_multiline");break;case 10:this.popState();break;case 11:return"acc_descr_multiline_value";case 12:return 14;case 13:case 14:break;case 15:return 6;case 16:return 40;case 17:return 33;case 18:return 38;case 19:return 42;case 20:return 43;case 21:return 44;case 22:return 45;case 23:return 35;case 24:return 29;case 25:return 30;case 26:return 37;case 27:return 32;case 28:return 27;case 29:case 30:return 10;case 31:return 9;case 32:return"CARET";case 33:this.begin("options");break;case 34:this.popState();break;case 35:return 13;case 36:return 36;case 37:this.begin("string");break;case 38:this.popState();break;case 39:return 34;case 40:return 31;case 41:return 54;case 42:return 8}},rules:[/^(?:%%\{)/i,/^(?:((?:(?!\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\}%%)/i,/^(?:((?:(?!\}%%).|\n)*))/i,/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[10,11],inclusive:!1},acc_descr:{rules:[8],inclusive:!1},acc_title:{rules:[6],inclusive:!1},close_directive:{rules:[],inclusive:!1},arg_directive:{rules:[3,4],inclusive:!1},type_directive:{rules:[2,3],inclusive:!1},open_directive:{rules:[1],inclusive:!1},options:{rules:[34,35],inclusive:!1},string:{rules:[38,39],inclusive:!1},INITIAL:{rules:[0,5,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,40,41,42,43],inclusive:!0}}},new((_.prototype=e).Parser=_)}();const Ye=pe.parser=pe;let ae=I().gitGraph.mainBranchName,Ke=I().gitGraph.mainBranchOrder,R={},G=null,Z={},L=(Z[ae]={name:ae,order:Ke},{}),A=(L[ae]=G,ae),ye="LR",U=0;function be(){return Ve({length:7})}const Fe=function(t,e,r){De.parseDirective(this,t,e,r)};function Ue(t,i){const a=Object.create(null);return t.reduce((t,e)=>{var r=i(e);return a[r]||(a[r]=!0,t.push(e)),t},[])}const Je=function(t){ye=t};let Ee={};const We=function(t){N.debug("options str",t),t=(t=t&&t.trim())||"{}";try{Ee=JSON.parse(t)}catch(t){N.error("error while parsing gitGraph options",t.message)}},Xe=function(){return Ee},Qe=function(t,e,r,i){N.debug("Entering commit:",t,e,r,i),e=V.sanitizeText(e,I()),t=V.sanitizeText(t,I()),i=V.sanitizeText(i,I());e={id:e||U+"-"+be(),message:t,seq:U++,type:r||$.NORMAL,tag:i||"",parents:null==G?[]:[G.id],branch:A};G=e,R[e.id]=e,L[A]=e.id,N.debug("in pushCommit "+e.id)},Ze=function(e,t){if(e=V.sanitizeText(e,I()),void 0!==L[e]){let t=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+e+'")');throw t.hash={text:"branch "+e,token:"branch "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+e+'"']},t}L[e]=null!=G?G.id:null,Z[e]={name:e,order:t?parseInt(t,10):null},we(e),N.debug("in createBranch")},$e=function(e,r,i,a){e=V.sanitizeText(e,I()),r=V.sanitizeText(r,I());var t=R[L[A]],c=R[L[e]];if(A===e){let t=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw t.hash={text:"merge "+e,token:"merge "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},t}if(void 0===t||!t){let t=new Error('Incorrect usage of "merge". Current branch ('+A+")has no commits");throw t.hash={text:"merge "+e,token:"merge "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},t}if(void 0===L[e]){let t=new Error('Incorrect usage of "merge". Branch to be merged ('+e+") does not exist");throw t.hash={text:"merge "+e,token:"merge "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+e]},t}if(void 0===c||!c){let t=new Error('Incorrect usage of "merge". Branch to be merged ('+e+") has no commits");throw t.hash={text:"merge "+e,token:"merge "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},t}if(t===c){let t=new Error('Incorrect usage of "merge". Both branches have same head');throw t.hash={text:"merge "+e,token:"merge "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},t}if(r&&void 0!==R[r]){let t=new Error('Incorrect usage of "merge". Commit with id:'+r+" already exists, use different custom Id");throw t.hash={text:"merge "+e+r+i+a,token:"merge "+e+r+i+a,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+e+" "+r+"_UNIQUE "+i+" "+a]},t}t={id:r||U+"-"+be(),message:"merged branch "+e+" into "+A,seq:U++,parents:[null==G?null:G.id,L[e]],branch:A,type:$.MERGE,customType:i,customId:!!r,tag:a||""};G=t,R[t.id]=t,L[A]=t.id,N.debug(L),N.debug("in mergeBranch")},et=function(e,r,t){if(N.debug("Entering cherryPick:",e,r,t),e=V.sanitizeText(e,I()),r=V.sanitizeText(r,I()),t=V.sanitizeText(t,I()),!e||void 0===R[e]){let t=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw t.hash={text:"cherryPick "+e+" "+r,token:"cherryPick "+e+" "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},t}var i=R[e],a=i.branch;if(i.type===$.MERGE){let t=new Error('Incorrect usage of "cherryPick". Source commit should not be a merge commit');throw t.hash={text:"cherryPick "+e+" "+r,token:"cherryPick "+e+" "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},t}if(!r||void 0===R[r]){if(a===A){let t=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw t.hash={text:"cherryPick "+e+" "+r,token:"cherryPick "+e+" "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},t}a=R[L[A]];if(void 0===a||!a){let t=new Error('Incorrect usage of "cherry-pick". Current branch ('+A+")has no commits");throw t.hash={text:"cherryPick "+e+" "+r,token:"cherryPick "+e+" "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},t}a={id:U+"-"+be(),message:"cherry-picked "+i+" into "+A,seq:U++,parents:[null==G?null:G.id,i.id],branch:A,type:$.CHERRY_PICK,tag:t??"cherry-pick:"+i.id};G=a,R[a.id]=a,L[A]=a.id,N.debug(L),N.debug("in cherryPick")}},we=function(e){if(e=V.sanitizeText(e,I()),void 0===L[e]){let t=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+e+'")');throw t.hash={text:"checkout "+e,token:"checkout "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+e+'"']},t}A=e;e=L[A];G=R[e]};function xe(t,e,r){e=t.indexOf(e);-1===e?t.push(r):t.splice(e,1,r)}function Te(t){const e=t.reduce((t,e)=>t.seq>e.seq?t:e,t[0]);let r="";t.forEach(function(t){t===e?r+="\t*":r+="\t|"});const i=[r,e.id,e.seq];for(var a in L)L[a]===e.id&&i.push(a);if(N.debug(i.join(" ")),e.parents&&2==e.parents.length){var c=R[e.parents[0]];xe(t,e,c),t.push(R[e.parents[1]])}else{if(0==e.parents.length)return;c=R[e.parents];xe(t,e,c)}Te(t=Ue(t,t=>t.id))}const tt=function(){N.debug(R),Te([ve()[0]])},rt=function(){R={},G=null;var t=I().gitGraph.mainBranchName,e=I().gitGraph.mainBranchOrder;(L={})[t]=null,(Z={})[t]={name:t,order:e},A=t,U=0,Be()},it=function(){return Object.values(Z).map((t,e)=>null!==t.order?t:{...t,order:parseFloat("0."+e,10)}).sort((t,e)=>t.order-e.order).map(({name:t})=>({name:t}))},st=function(){return L},at=function(){return R},ve=function(){const t=Object.keys(R).map(function(t){return R[t]});return t.forEach(function(t){N.debug(t.id)}),t.sort((t,e)=>t.seq-e.seq),t},nt=function(){return A},ct=function(){return ye},ot=function(){return G},$={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},lt={parseDirective:Fe,getConfig:()=>I().gitGraph,setDirection:Je,setOptions:We,getOptions:Xe,commit:Qe,branch:Ze,merge:$e,cherryPick:et,checkout:we,prettyPrint:tt,clear:rt,getBranchesAsObjArray:it,getBranches:st,getCommits:at,getCommitsArray:ve,getCurrentBranch:nt,getDirection:ct,getHead:ot,setAccTitle:Oe,getAccTitle:Ie,getAccDescription:Ge,setAccDescription:Pe,setDiagramTitle:Ne,getDiagramTitle:He,commitType:$};let X={};const D={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},F=8;let C={},ee={},ne=[],te=0,S="LR";const ht=()=>{C={},ee={},X={},te=0,ne=[],S="LR"},Le=t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","text");let r=[];for(const i of r="string"==typeof t?t.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(t)?t:[]){const a=document.createElementNS("http://www.w3.org/2000/svg","tspan");a.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),a.setAttribute("dy","1em"),a.setAttribute("x","0"),a.setAttribute("class","row"),a.textContent=i.trim(),e.appendChild(a)}return e},_e=(t,p,g)=>{const b=fe().gitGraph,d=t.append("g").attr("class","commit-bullets"),f=t.append("g").attr("class","commit-labels");let k=0;"TB"===S&&(k=30),Object.keys(p).sort((t,e)=>p[t].seq-p[e].seq).forEach(r=>{var r=p[r],i="TB"===S?k+10:C[r.branch].pos,a="TB"===S?C[r.branch].pos:k+10;if(g){let t,e=void 0!==r.customType&&""!==r.customType?r.customType:r.type;switch(e){case D.NORMAL:t="commit-normal";break;case D.REVERSE:t="commit-reverse";break;case D.HIGHLIGHT:t="commit-highlight";break;case D.MERGE:t="commit-merge";break;case D.CHERRY_PICK:t="commit-cherry-pick";break;default:t="commit-normal"}if(e===D.HIGHLIGHT){const c=d.append("rect");c.attr("x",a-10),c.attr("y",i-10),c.attr("height",20),c.attr("width",20),c.attr("class",`commit ${r.id} commit-highlight${C[r.branch].index%F} ${t}-outer`),d.append("rect").attr("x",a-6).attr("y",i-6).attr("height",12).attr("width",12).attr("class",`commit ${r.id} commit${C[r.branch].index%F} ${t}-inner`)}else if(e===D.CHERRY_PICK)d.append("circle").attr("cx",a).attr("cy",i).attr("r",10).attr("class",`commit ${r.id} `+t),d.append("circle").attr("cx",a-3).attr("cy",i+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${r.id} `+t),d.append("circle").attr("cx",a+3).attr("cy",i+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${r.id} `+t),d.append("line").attr("x1",a+3).attr("y1",i+1).attr("x2",a).attr("y2",i-5).attr("stroke","#fff").attr("class",`commit ${r.id} `+t),d.append("line").attr("x1",a-3).attr("y1",i+1).attr("x2",a).attr("y2",i-5).attr("stroke","#fff").attr("class",`commit ${r.id} `+t);else{const s=d.append("circle");if(s.attr("cx",a),s.attr("cy",i),s.attr("r",r.type===D.MERGE?9:10),s.attr("class",`commit ${r.id} commit`+C[r.branch].index%F),e===D.MERGE){const n=d.append("circle");n.attr("cx",a),n.attr("cy",i),n.attr("r",6),n.attr("class",`commit ${t} ${r.id} commit`+C[r.branch].index%F)}e===D.REVERSE&&d.append("path").attr("d",`M ${a-5},${i-5}L${a+5},${i+5}M${a-5},${i+5}L${a+5},`+(i-5)).attr("class",`commit ${t} ${r.id} commit`+C[r.branch].index%F)}}if("TB"===S?ee[r.id]={x:a,y:k+10}:ee[r.id]={x:k+10,y:i},g){if(r.type!==D.CHERRY_PICK&&(r.customId&&r.type===D.MERGE||r.type!==D.MERGE)&&b.showCommitLabel){const o=f.append("g"),l=o.insert("rect").attr("class","commit-label-bkg"),h=o.append("text").attr("x",k).attr("y",i+25).attr("class","commit-label").text(r.id);var t=h.node().getBBox();l.attr("x",k+10-t.width/2-2).attr("y",i+13.5).attr("width",t.width+4).attr("height",t.height+4),"TB"===S&&(l.attr("x",a-(t.width+16+5)).attr("y",i-12),h.attr("x",a-(t.width+16)).attr("y",i+t.height-12)),"TB"!==S&&h.attr("x",k+10-t.width/2),b.rotateCommitLabel&&("TB"===S?(h.attr("transform","rotate(-45, "+a+", "+i+")"),l.attr("transform","rotate(-45, "+a+", "+i+")")):(e=-7.5-(t.width+10)/25*9.5,t=10+t.width/25*8.5,o.attr("transform","translate("+e+", "+t+") rotate(-45, "+k+", "+i+")")))}if(r.tag){const m=f.insert("polygon"),u=f.append("circle"),y=f.append("text").attr("y",i-16).attr("class","tag-label").text(r.tag);var e=y.node().getBBox(),t=(y.attr("x",k+10-e.width/2),e.height/2),r=i-19.2;m.attr("class","tag-label-bkg").attr("points",`
          ${k-e.width/2-2},${2+r}
          ${k-e.width/2-2},${r-2}
          ${k+10-e.width/2-4},${r-t-2}
          ${k+10+e.width/2+4},${r-t-2}
          ${k+10+e.width/2+4},${r+t+2}
          ${k+10-e.width/2-4},`+(r+t+2)),u.attr("cx",k-e.width/2+2).attr("cy",r).attr("r",1.5).attr("class","tag-hole"),"TB"===S&&(m.attr("class","tag-label-bkg").attr("points",`
            ${a},${k+2}
            ${a},${k-2}
            ${a+10},${k-t-2}
            ${a+10+e.width+4},${k-t-2}
            ${a+10+e.width+4},${k+t+2}
            ${a+10},`+(k+t+2)).attr("transform","translate(12,12) rotate(45, "+a+","+k+")"),u.attr("cx",a+2).attr("cy",k).attr("transform","translate(12,12) rotate(45, "+a+","+k+")"),y.attr("x",a+5).attr("y",k+3).attr("transform","translate(14,14) rotate(45, "+a+","+k+")"))}}(k+=50)>te&&(te=k)})},mt=(e,r,i)=>0<Object.keys(i).filter(t=>i[t].branch===r.branch&&i[t].seq>e.seq&&i[t].seq<r.seq).length,Q=(t,e,r=0)=>{const i=t+Math.abs(t-e)/2;if(5<r)return i;if(ne.every(t=>10<=Math.abs(t-i)))return ne.push(i),i;var a=Math.abs(t-e);return Q(t,e-a/5,r+1)},ut=(t,e,r,i)=>{var a,c=ee[e.id],s=ee[r.id],i=mt(e,r,i);let n="",o="",l=0,h=0,m=C[r.branch].index,u;i?(n="A 10 10, 0, 0, 0,",o="A 10 10, 0, 0, 1,",l=10,h=10,m=C[r.branch].index,i=c.y<s.y?Q(c.y,s.y):Q(s.y,c.y),a=c.x<s.x?Q(c.x,s.x):Q(s.x,c.x),u="TB"===S?c.x<s.x?`M ${c.x} ${c.y} L ${a-l} ${c.y} ${o} ${a} ${c.y+h} L ${a} ${s.y-l} ${n} ${a+h} ${s.y} L ${s.x} `+s.y:`M ${c.x} ${c.y} L ${a+l} ${c.y} ${n} ${a} ${c.y+h} L ${a} ${s.y-l} ${o} ${a-h} ${s.y} L ${s.x} `+s.y:c.y<s.y?`M ${c.x} ${c.y} L ${c.x} ${i-l} ${n} ${c.x+h} ${i} L ${s.x-l} ${i} ${o} ${s.x} ${i+h} L ${s.x} `+s.y:`M ${c.x} ${c.y} L ${c.x} ${i+l} ${o} ${c.x+h} ${i} L ${s.x-l} ${i} ${n} ${s.x} ${i-h} L ${s.x} `+s.y):"TB"===S?(c.x<s.x&&(n="A 20 20, 0, 0, 0,",o="A 20 20, 0, 0, 1,",l=20,h=20,m=C[r.branch].index,u=`M ${c.x} ${c.y} L ${s.x-l} ${c.y} ${o} ${s.x} ${c.y+h} L ${s.x} `+s.y),c.x>s.x&&(n="A 20 20, 0, 0, 0,",o="A 20 20, 0, 0, 1,",l=20,h=20,m=C[e.branch].index,u=`M ${c.x} ${c.y} L ${c.x} ${s.y-l} ${o} ${c.x-h} ${s.y} L ${s.x} `+s.y),c.x===s.x&&(m=C[e.branch].index,u=`M ${c.x} ${c.y} L ${c.x+l} ${c.y} ${n} ${c.x+h} ${s.y+l} L ${s.x} `+s.y)):(c.y<s.y&&(n="A 20 20, 0, 0, 0,",l=20,h=20,m=C[r.branch].index,u=`M ${c.x} ${c.y} L ${c.x} ${s.y-l} ${n} ${c.x+h} ${s.y} L ${s.x} `+s.y),c.y>s.y&&(n="A 20 20, 0, 0, 0,",l=20,h=20,m=C[e.branch].index,u=`M ${c.x} ${c.y} L ${s.x-l} ${c.y} ${n} ${s.x} ${c.y-h} L ${s.x} `+s.y),c.y===s.y&&(m=C[e.branch].index,u=`M ${c.x} ${c.y} L ${c.x} ${s.y-l} ${n} ${c.x+h} ${s.y} L ${s.x} `+s.y)),t.append("path").attr("d",u).attr("class","arrow arrow"+m%F)},pt=(t,r)=>{const i=t.append("g").attr("class","commit-arrows");Object.keys(r).forEach(t=>{const e=r[t];e.parents&&0<e.parents.length&&e.parents.forEach(t=>{ut(i,r[t],e,r)})})},ft=(t,e)=>{const o=fe().gitGraph,l=t.append("g");e.forEach((t,e)=>{const r=e%F,i=C[t.name].pos,a=l.append("line");a.attr("x1",0),a.attr("y1",i),a.attr("x2",te),a.attr("y2",i),a.attr("class","branch branch"+r),"TB"===S&&(a.attr("y1",30),a.attr("x1",i),a.attr("y2",te),a.attr("x2",i)),ne.push(i);e=t.name;const c=Le(e),s=l.insert("rect"),n=l.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+r);n.node().appendChild(c);t=c.getBBox();s.attr("class","branchLabelBkg label"+r).attr("rx",4).attr("ry",4).attr("x",-t.width-4-(!0===o.rotateCommitLabel?30:0)).attr("y",-t.height/2+8).attr("width",t.width+18).attr("height",t.height+4),n.attr("transform","translate("+(-t.width-14-(!0===o.rotateCommitLabel?30:0))+", "+(i-t.height/2-1)+")"),"TB"===S&&(s.attr("x",i-t.width/2-10).attr("y",0),n.attr("transform","translate("+(i-t.width/2-5)+", 0)")),"TB"!==S&&s.attr("transform","translate(-19, "+(i-t.height/2)+")")})},bt=function(t,e,r,i){ht();const a=fe(),n=a.gitGraph,c=(N.debug("in gitgraph renderer",t+`
`,"id:",e,r),X=i.db.getCommits(),i.db.getBranchesAsObjArray()),o=(S=i.db.getDirection(),ze(`[id="${e}"]`));let l=0;c.forEach((t,e)=>{const r=Le(t.name),i=o.append("g"),a=i.insert("g").attr("class","branchLabel"),c=a.insert("g").attr("class","label branch-label");c.node().appendChild(r);var s=r.getBBox();C[t.name]={pos:l,index:e},l+=50+(n.rotateCommitLabel?40:0)+("TB"===S?s.width/2:0),c.remove(),a.remove(),i.remove()}),_e(o,X,!1),n.showBranches&&ft(o,c),pt(o,X),_e(o,X,!0),je.insertTitle(o,"gitTitleText",n.titleTopMargin,i.db.getDiagramTitle()),qe(void 0,o,n.diagramPadding,n.useMaxWidth??a.useMaxWidth)},gt={draw:bt},dt=e=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(t=>`
        .branch-label${t} { fill: ${e["gitBranchLabel"+t]}; }
        .commit${t} { stroke: ${e["git"+t]}; fill: ${e["git"+t]}; }
        .commit-highlight${t} { stroke: ${e["gitInv"+t]}; fill: ${e["gitInv"+t]}; }
        .label${t}  { fill: ${e["git"+t]}; }
        .arrow${t} { stroke: ${e["git"+t]}; }
        `).join(`
`)}

  .branch {
    stroke-width: 1;
    stroke: ${e.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${e.commitLabelFontSize}; fill: ${e.commitLabelColor};}
  .commit-label-bkg { font-size: ${e.commitLabelFontSize}; fill: ${e.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${e.tagLabelFontSize}; fill: ${e.tagLabelColor};}
  .tag-label-bkg { fill: ${e.tagLabelBackground}; stroke: ${e.tagLabelBorder}; }
  .tag-hole { fill: ${e.textColor}; }

  .commit-merge {
    stroke: ${e.primaryColor};
    fill: ${e.primaryColor};
  }
  .commit-reverse {
    stroke: ${e.primaryColor};
    fill: ${e.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${e.primaryColor};
    fill: ${e.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${e.textColor};
  }
`,kt=dt,_t={parser:Ye,db:lt,renderer:gt,styles:kt};export{_t as diagram};