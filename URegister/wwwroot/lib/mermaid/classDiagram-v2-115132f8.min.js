import{p as parser,d as db,s as styles}from"./styles-f1c03133.js";import{l as log,c as getConfig,j as d3select,A as utils,t as setupGraphViewbox,r as interpolateToCurve,o as curveLinear,p as getStylesFromArray,f as common}from"./mermaid-f185fde2.js";import{G as Graph}from"./layout-7899ed33.js";import{r as render}from"./index-1bb7dfb9.js";import"./edges-ecd2ecb8.js";import"./createText-6836bc4a.js";import"./svgDraw-092a0897.js";import"./line-eb9172ee.js";import"./array-b7dcf730.js";import"./constant-b644328d.js";const sanitizeText=e=>common.sanitizeText(e,getConfig());let conf={dividerMargin:10,padding:5,textHeight:10,curve:void 0};const addNamespaces=function(a,o,l,n){const e=Object.keys(a);log.info("keys:",e),log.info(a),e.forEach(function(e){var e=a[e],t={shape:"rect",id:e.id,domId:e.domId,labelText:sanitizeText(e.id),labelStyle:"",style:"fill: none; stroke: black",padding:(null==(t=getConfig().flowchart)?void 0:t.padding)??(null==(t=getConfig().class)?void 0:t.padding)};o.setNode(e.id,t),addClasses(e.classes,o,l,n,e.id),log.info("setNode",t)})},addClasses=function(n,s,e,i,r){const t=Object.keys(n);log.info("keys:",t),log.info(n),t.filter(e=>n[e].parent==r).forEach(function(e){const t=n[e];var e=t.cssClasses.join(" ");const a="",o="";var l=t.label??t.id,l={labelStyle:a,shape:"class_box",labelText:sanitizeText(l),classData:t,rx:0,ry:0,class:e,style:o,id:t.id,domId:t.domId,tooltip:i.db.getTooltip(t.id,r)||"",haveCallback:t.haveCallback,link:t.link,width:"group"===t.type?500:void 0,type:t.type,padding:(null==(l=getConfig().flowchart)?void 0:l.padding)??(null==(e=getConfig().class)?void 0:e.padding)};s.setNode(t.id,l),r&&s.setParent(t.id,r),log.info("setNode",l)})},addNotes=function(e,n,s,i){log.info(e),e.forEach(function(e,t){const a="",o="";var l=e.text,l={labelStyle:a,shape:"note",labelText:sanitizeText(l),noteData:e,rx:0,ry:0,class:"",style:o,id:e.id,domId:e.id,tooltip:"",type:"note",padding:(null==(l=getConfig().flowchart)?void 0:l.padding)??(null==(l=getConfig().class)?void 0:l.padding)};n.setNode(e.id,l),log.info("setNode",l),e.class&&e.class in i&&(t={id:"edgeNote"+(l=s+t),classes:"relation",pattern:"dotted",arrowhead:"none",startLabelRight:"",endLabelLeft:"",arrowTypeStart:"none",arrowTypeEnd:"none",style:"fill:none",labelStyle:"",curve:interpolateToCurve(conf.curve,curveLinear)},n.setEdge(e.id,e.class,t,l))})},addRelations=function(e,o){const l=getConfig().flowchart;let n=0;e.forEach(function(e){var t;n++;const a={classes:"relation",pattern:1==e.relation.lineType?"dashed":"solid",id:"id"+n,arrowhead:"arrow_open"===e.type?"none":"normal",startLabelRight:"none"===e.relationTitle1?"":e.relationTitle1,endLabelLeft:"none"===e.relationTitle2?"":e.relationTitle2,arrowTypeStart:getArrowMarker(e.relation.type1),arrowTypeEnd:getArrowMarker(e.relation.type2),style:"fill:none",labelStyle:"",curve:interpolateToCurve(null==l?void 0:l.curve,curveLinear)};log.info(a,e),void 0!==e.style&&(t=getStylesFromArray(e.style),a.style=t.style,a.labelStyle=t.labelStyle),e.text=e.title,void 0===e.text?void 0!==e.style&&(a.arrowheadStyle="fill: #333"):(a.arrowheadStyle="fill: #333",a.labelpos="c",(null==(t=getConfig().flowchart)?void 0:t.htmlLabels)??getConfig().htmlLabels?(a.labelType="html",a.label='<span class="edgeLabel">'+e.text+"</span>"):(a.labelType="text",a.label=e.text.replace(common.lineBreakRegex,"\n"),void 0===e.style&&(a.style=a.style||"stroke: #333; stroke-width: 1.5px;fill:none"),a.labelStyle=a.labelStyle.replace("color:","fill:"))),o.setEdge(e.id1,e.id2,a,n)})},setConf=function(e){conf={...conf,...e}},draw=async function(e,t,a,o){log.info("Drawing class - ",t);var l=getConfig().flowchart??getConfig().class,n=getConfig().securityLevel,s=(log.info("config:",l),(null==l?void 0:l.nodeSpacing)??50),i=(null==l?void 0:l.rankSpacing)??50,s=new Graph({multigraph:!0,compound:!0}).setGraph({rankdir:o.db.getDirection(),nodesep:s,ranksep:i,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}}),i=o.db.getNamespaces(),r=o.db.getClasses(),d=o.db.getRelations(),c=o.db.getNotes();log.info(d),addNamespaces(i,s,t,o),addClasses(r,s,t,o),addRelations(d,s),addNotes(c,s,d.length+1,r);let g;"sandbox"===n&&(g=d3select("#i"+t));const p=d3select("sandbox"===n?g.nodes()[0].contentDocument.body:"body");i=p.select(`[id="${t}"]`),c=p.select("#"+t+" g");if(await render(c,s,["aggregation","extension","composition","dependency","lollipop"],"classDiagram",t),utils.insertTitle(i,"classTitleText",(null==l?void 0:l.titleTopMargin)??5,o.db.getDiagramTitle()),setupGraphViewbox(s,i,null==l?void 0:l.diagramPadding,null==l?void 0:l.useMaxWidth),null==l||!l.htmlLabels){const b="sandbox"===n?g.nodes()[0].contentDocument:document;for(const y of b.querySelectorAll('[id="'+t+'"] .edgeLabel .label')){var f=y.getBBox();const u=b.createElementNS("http://www.w3.org/2000/svg","rect");u.setAttribute("rx",0),u.setAttribute("ry",0),u.setAttribute("width",f.width),u.setAttribute("height",f.height),y.insertBefore(u,y.firstChild)}}};function getArrowMarker(e){let t;switch(e){case 0:t="aggregation";break;case 1:t="extension";break;case 2:t="composition";break;case 3:t="dependency";break;case 4:t="lollipop";break;default:t="none"}return t}const renderer={setConf:setConf,draw:draw},diagram={parser:parser,db:db,renderer:renderer,styles:styles,init:e=>{e.class||(e.class={}),e.class.arrowMarkerAbsolute=e.arrowMarkerAbsolute,db.clear()}};export{diagram};