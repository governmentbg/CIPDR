import{i as initRange}from"./init-cc95ec8e.js";class InternMap extends Map{constructor(e,n=keyof){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),null!=e)for(var[t,r]of e)this.set(t,r)}get(e){return super.get(intern_get(this,e))}has(e){return super.has(intern_get(this,e))}set(e,n){return super.set(intern_set(this,e),n)}delete(e){return super.delete(intern_delete(this,e))}}function intern_get({_intern:e,_key:n},t){n=n(t);return e.has(n)?e.get(n):t}function intern_set({_intern:e,_key:n},t){n=n(t);return e.has(n)?e.get(n):(e.set(n,t),t)}function intern_delete({_intern:e,_key:n},t){n=n(t);return e.has(n)&&(t=e.get(n),e.delete(n)),t}function keyof(e){return null!==e&&"object"==typeof e?e.valueOf():e}const implicit=Symbol("implicit");function ordinal(){var t=new InternMap,r=[],i=[],u=implicit;function s(e){let n=t.get(e);if(void 0===n){if(u!==implicit)return u;t.set(e,n=r.push(e)-1)}return i[n%i.length]}return s.domain=function(e){if(!arguments.length)return r.slice();r=[],t=new InternMap;for(const n of e)t.has(n)||t.set(n,r.push(n)-1);return s},s.range=function(e){return arguments.length?(i=Array.from(e),s):i.slice()},s.unknown=function(e){return arguments.length?(u=e,s):u},s.copy=function(){return ordinal(r,i).unknown(u)},initRange.apply(s,arguments),s}export{ordinal as o};