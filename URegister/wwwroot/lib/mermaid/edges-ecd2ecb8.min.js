import{l as log,q as evaluate,c as getConfig,aT as decodeEntities,j as d3select,d as sanitizeText,A as utils,G as curveBasis}from"./mermaid-f185fde2.js";import{c as createText}from"./createText-6836bc4a.js";import{p as parseMember}from"./svgDraw-092a0897.js";import{l as line}from"./line-eb9172ee.js";const insertMarkers=(e,t,a,r)=>{t.forEach(t=>{markers[t](e,a,r)})},extension=(t,e,a)=>{log.trace("Making markers for ",a),t.append("defs").append("marker").attr("id",e+"-extensionStart").attr("class","marker extension "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 1,7 L18,13 V 1 Z"),t.append("defs").append("marker").attr("id",e+"-extensionEnd").attr("class","marker extension "+e).attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 1,1 V 13 L18,7 Z")},composition=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-compositionStart").attr("class","marker composition "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",e+"-compositionEnd").attr("class","marker composition "+e).attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")},aggregation=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-aggregationStart").attr("class","marker aggregation "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",e+"-aggregationEnd").attr("class","marker aggregation "+e).attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")},dependency=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-dependencyStart").attr("class","marker dependency "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 5,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",e+"-dependencyEnd").attr("class","marker dependency "+e).attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L14,7 L9,1 Z")},lollipop=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-lollipopStart").attr("class","marker lollipop "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","white").attr("cx",6).attr("cy",7).attr("r",6)},point=(t,e)=>{t.append("marker").attr("id",e+"-pointEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",10).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",e+"-pointStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",0).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 5 L 10 10 L 10 0 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")},circle$1=(t,e)=>{t.append("marker").attr("id",e+"-circleEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",11).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",e+"-circleStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",-1).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")},cross=(t,e)=>{t.append("marker").attr("id",e+"-crossEnd").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",12).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0"),t.append("marker").attr("id",e+"-crossStart").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",-1).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0")},barb=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-barbEnd").attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",14).attr("markerUnits","strokeWidth").attr("orient","auto").append("path").attr("d","M 19,7 L9,13 L14,7 L9,1 Z")},markers={extension:extension,composition:composition,aggregation:aggregation,dependency:dependency,lollipop:lollipop,point:point,circle:circle$1,cross:cross,barb:barb},insertMarkers$1=insertMarkers;function applyStyle(t,e){e&&t.attr("style",e)}function addHtmlLabel(t){const e=d3select(document.createElementNS("http://www.w3.org/2000/svg","foreignObject")),a=e.append("xhtml:div");var r=t.label,i=t.isNode?"nodeLabel":"edgeLabel";return a.html('<span class="'+i+'" '+(t.labelStyle?'style="'+t.labelStyle+'"':"")+">"+r+"</span>"),applyStyle(a,t.labelStyle),a.style("display","inline-block"),a.style("white-space","nowrap"),a.attr("xmlns","http://www.w3.org/1999/xhtml"),e.node()}const createLabel=(t,e,a,r)=>{let i=t||"";if("object"==typeof i&&(i=i[0]),evaluate(getConfig().flowchart.htmlLabels))return i=i.replace(/\\n|\n/g,"<br />"),log.info("vertexText"+i),addHtmlLabel({isNode:r,label:decodeEntities(i).replace(/fa[blrs]?:fa-[\w-]+/g,t=>`<i class='${t.replace(":"," ")}'></i>`),labelStyle:e.replace("fill:","color:")});{const s=document.createElementNS("http://www.w3.org/2000/svg","text");s.setAttribute("style",e.replace("color:","fill:"));let t=[];for(const n of t="string"==typeof i?i.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(i)?i:[]){const l=document.createElementNS("http://www.w3.org/2000/svg","tspan");l.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),l.setAttribute("dy","1em"),l.setAttribute("x","0"),a?l.setAttribute("class","title-row"):l.setAttribute("class","row"),l.textContent=n.trim(),s.appendChild(l)}return s}},createLabel$1=createLabel,labelHelper=async(t,e,a,r)=>{let i;var s=e.useHtmlLabels||evaluate(getConfig().flowchart.htmlLabels);i=a||"node default";const n=t.insert("g").attr("class",i).attr("id",e.domId||e.id),l=n.insert("g").attr("class","label").attr("style",e.labelStyle);let o;o=void 0===e.labelText?"":"string"==typeof e.labelText?e.labelText:e.labelText[0];const d=l.node();let c,h=(c="markdown"===e.labelType?createText(l,sanitizeText(decodeEntities(o),getConfig()),{useHtmlLabels:s,width:e.width||getConfig().flowchart.wrappingWidth,classes:"markdown-node-label"}):d.appendChild(createLabel$1(sanitizeText(decodeEntities(o),getConfig()),e.labelStyle,!1,r))).getBBox();a=e.padding/2;if(evaluate(getConfig().flowchart.htmlLabels)){const g=c.children[0],p=d3select(c);t=g.getElementsByTagName("img");if(t){const y=""===o.replace(/<img[^>]*>/g,"").trim();await Promise.all([...t].map(a=>new Promise(e=>{function t(){var t;a.style.display="flex",a.style.flexDirection="column",y?(t=(getConfig().fontSize?getConfig():window.getComputedStyle(document.body)).fontSize,a.style.width=5*parseInt(t,10)+"px"):a.style.width="100%",e(a)}setTimeout(()=>{a.complete&&t()}),a.addEventListener("error",t),a.addEventListener("load",t)})))}h=g.getBoundingClientRect(),p.attr("width",h.width),p.attr("height",h.height)}return s?l.attr("transform","translate("+-h.width/2+", "+-h.height/2+")"):l.attr("transform","translate(0, "+-h.height/2+")"),e.centerLabel&&l.attr("transform","translate("+-h.width/2+", "+-h.height/2+")"),l.insert("rect",":first-child"),{shapeSvg:n,bbox:h,halfPadding:a,label:l}},updateNodeBounds=(t,e)=>{e=e.node().getBBox();t.width=e.width,t.height=e.height};function insertPolygonShape(t,e,a,r){return t.insert("polygon",":first-child").attr("points",r.map(function(t){return t.x+","+t.y}).join(" ")).attr("class","label-container").attr("transform","translate("+-e/2+","+a/2+")")}function intersectNode(t,e){return t.intersect(e)}function intersectEllipse(t,e,a,r){var i=t.x,t=t.y,s=i-r.x,n=t-r.y,l=Math.sqrt(e*e*n*n+a*a*s*s),s=Math.abs(e*a*s/l),e=(r.x<i&&(s=-s),Math.abs(e*a*n/l));return{x:i+s,y:t+(e=r.y<t?-e:e)}}function intersectCircle(t,e,a){return intersectEllipse(t,e,e,a)}function intersectLine(t,e,a,r){var i,s=e.y-t.y,n=t.x-e.x,l=e.x*t.y-t.x*e.y,o=s*a.x+n*a.y+l,d=s*r.x+n*r.y+l;if(!(0!=o&&0!=d&&sameSign(o,d)||(o=r.y-a.y,d=a.x-r.x,a=r.x*a.y-a.x*r.y,r=o*t.x+d*t.y+a,t=o*e.x+d*e.y+a,0!=r&&0!=t&&sameSign(r,t)||0==(i=s*d-o*n))))return e=Math.abs(i/2),{x:(r=n*a-d*l)<0?(r-e)/i:(r+e)/i,y:(r=o*l-s*a)<0?(r-e)/i:(r+e)/i}}function sameSign(t,e){return 0<t*e}function intersectPolygon(t,e,r){for(var a=t.x,i=t.y,s=[],n=Number.POSITIVE_INFINITY,l=Number.POSITIVE_INFINITY,o=("function"==typeof e.forEach?e.forEach(function(t){n=Math.min(n,t.x),l=Math.min(l,t.y)}):(n=Math.min(n,e.x),l=Math.min(l,e.y)),a-t.width/2-n),d=i-t.height/2-l,c=0;c<e.length;c++){var h=e[c],g=e[c<e.length-1?c+1:0],h=intersectLine(t,r,{x:o+h.x,y:d+h.y},{x:o+g.x,y:d+g.y});h&&s.push(h)}return s.length?(1<s.length&&s.sort(function(t,e){var a=t.x-r.x,t=t.y-r.y,a=Math.sqrt(a*a+t*t),t=e.x-r.x,e=e.y-r.y,t=Math.sqrt(t*t+e*e);return a<t?-1:a===t?0:1}),s[0]):t}const intersectRect=(t,e)=>{var a,r=t.x,i=t.y,s=e.x-r,e=e.y-i,n=t.width/2,t=t.height/2,t=Math.abs(e)*n>Math.abs(s)*t?(e<0&&(t=-t),a=0==e?0:t*s/e,t):(a=n=s<0?-n:n,0==s?0:n*e/s);return{x:r+a,y:i+t}},intersectRect$1=intersectRect,intersect={node:intersectNode,circle:intersectCircle,ellipse:intersectEllipse,polygon:intersectPolygon,rect:intersectRect$1},note=async(t,e)=>{e.useHtmlLabels||getConfig().flowchart.htmlLabels||(e.centerLabel=!0);const{shapeSvg:a,bbox:r,halfPadding:i}=await labelHelper(t,e,"node "+e.classes,!0),s=(log.info("Classes = ",e.classes),a.insert("rect",":first-child"));return s.attr("rx",e.rx).attr("ry",e.ry).attr("x",-r.width/2-i).attr("y",-r.height/2-i).attr("width",r.width+e.padding).attr("height",r.height+e.padding),updateNodeBounds(e,s),e.intersect=function(t){return intersect.rect(e,t)},a},note$1=note,formatClass=t=>t?" "+t:"",getClassesFromNode=(t,e)=>`${e||"node default"}${formatClass(t.classes)} `+formatClass(t.class),question=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),a=a.width+e.padding+(a.height+e.padding);const r=[{x:a/2,y:0},{x:a,y:-a/2},{x:a/2,y:-a},{x:0,y:-a/2}],i=(log.info("Question main (Circle)"),insertPolygonShape(t,a,a,r));return i.attr("style",e.style),updateNodeBounds(e,i),e.intersect=function(t){return log.warn("Intersect called"),intersect.polygon(e,r,t)},t},choice=(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id);const r=[{x:0,y:14},{x:14,y:0},{x:0,y:-14},{x:-14,y:0}],i=a.insert("polygon",":first-child").attr("points",r.map(function(t){return t.x+","+t.y}).join(" "));return i.attr("class","state-start").attr("r",7).attr("width",28).attr("height",28),e.width=28,e.height=28,e.intersect=function(t){return intersect.circle(e,14,t)},a},hexagon=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),r=a.height+e.padding,i=r/4,a=a.width+2*i+e.padding;const s=[{x:i,y:0},{x:a-i,y:0},{x:a,y:-r/2},{x:a-i,y:-r},{x:i,y:-r},{x:0,y:-r/2}],n=insertPolygonShape(t,a,r,s);return n.attr("style",e.style),updateNodeBounds(e,n),e.intersect=function(t){return intersect.polygon(e,s,t)},t},rect_left_inv_arrow=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),r=a.width+e.padding,a=a.height+e.padding;const i=[{x:-a/2,y:0},{x:r,y:0},{x:r,y:-a},{x:-a/2,y:-a},{x:0,y:-a/2}],s=insertPolygonShape(t,r,a,i);return s.attr("style",e.style),e.width=r+a,e.height=a,e.intersect=function(t){return intersect.polygon(e,i,t)},t},lean_right=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e),!0),r=a.width+e.padding,a=a.height+e.padding;const i=[{x:-2*a/6,y:0},{x:r-a/6,y:0},{x:r+2*a/6,y:-a},{x:a/6,y:-a}],s=insertPolygonShape(t,r,a,i);return s.attr("style",e.style),updateNodeBounds(e,s),e.intersect=function(t){return intersect.polygon(e,i,t)},t},lean_left=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),r=a.width+e.padding,a=a.height+e.padding;const i=[{x:2*a/6,y:0},{x:r+a/6,y:0},{x:r-2*a/6,y:-a},{x:-a/6,y:-a}],s=insertPolygonShape(t,r,a,i);return s.attr("style",e.style),updateNodeBounds(e,s),e.intersect=function(t){return intersect.polygon(e,i,t)},t},trapezoid=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),r=a.width+e.padding,a=a.height+e.padding;const i=[{x:-2*a/6,y:0},{x:r+2*a/6,y:0},{x:r-a/6,y:-a},{x:a/6,y:-a}],s=insertPolygonShape(t,r,a,i);return s.attr("style",e.style),updateNodeBounds(e,s),e.intersect=function(t){return intersect.polygon(e,i,t)},t},inv_trapezoid=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),r=a.width+e.padding,a=a.height+e.padding;const i=[{x:a/6,y:0},{x:r-a/6,y:0},{x:r+2*a/6,y:-a},{x:-2*a/6,y:-a}],s=insertPolygonShape(t,r,a,i);return s.attr("style",e.style),updateNodeBounds(e,s),e.intersect=function(t){return intersect.polygon(e,i,t)},t},rect_right_inv_arrow=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),r=a.width+e.padding,a=a.height+e.padding;const i=[{x:0,y:0},{x:r+a/2,y:0},{x:r,y:-a/2},{x:r+a/2,y:-a},{x:0,y:-a}],s=insertPolygonShape(t,r,a,i);return s.attr("style",e.style),updateNodeBounds(e,s),e.intersect=function(t){return intersect.polygon(e,i,t)},t},cylinder=async(t,i)=>{const{shapeSvg:e,bbox:a}=await labelHelper(t,i,getClassesFromNode(i,void 0),!0);t=a.width+i.padding;const s=t/2,n=s/(2.5+t/50);var r=a.height+n+i.padding,l="M 0,"+n+" a "+s+","+n+" 0,0,0 "+t+" 0 a "+s+","+n+" 0,0,0 "+-t+" 0 l 0,"+r+" a "+s+","+n+" 0,0,0 "+t+" 0 l 0,"+-r,l=e.attr("label-offset-y",n).insert("path",":first-child").attr("style",i.style).attr("d",l).attr("transform","translate("+-t/2+","+-(r/2+n)+")");return updateNodeBounds(i,l),i.intersect=function(e){const a=intersect.rect(i,e);var r=a.x-i.x;if(0!=s&&(Math.abs(r)<i.width/2||Math.abs(r)==i.width/2&&Math.abs(a.y-i.y)>i.height/2-n)){let t=n*n*(1-r*r/(s*s));0!=t&&(t=Math.sqrt(t)),t=n-t,0<e.y-i.y&&(t=-t),a.y+=t}return a},e},rect=async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:i}=await labelHelper(t,e,"node "+e.classes+" "+e.class,!0),s=a.insert("rect",":first-child");var t=r.width+e.padding,n=r.height+e.padding;if(s.attr("class","basic label-container").attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("x",-r.width/2-i).attr("y",-r.height/2-i).attr("width",t).attr("height",n),e.props){const l=new Set(Object.keys(e.props));e.props.borders&&(applyNodePropertyBorders(s,e.props.borders,t,n),l.delete("borders")),l.forEach(t=>{log.warn("Unknown node property "+t)})}return updateNodeBounds(e,s),e.intersect=function(t){return intersect.rect(e,t)},a},labelRect=async(t,e)=>{const a=(await labelHelper(t,e,"label",!0))["shapeSvg"],r=(log.trace("Classes = ",e.class),a.insert("rect",":first-child"));if(r.attr("width",0).attr("height",0),a.attr("class","label edgeLabel"),e.props){const i=new Set(Object.keys(e.props));e.props.borders&&(applyNodePropertyBorders(r,e.props.borders,0,0),i.delete("borders")),i.forEach(t=>{log.warn("Unknown node property "+t)})}return updateNodeBounds(e,r),e.intersect=function(t){return intersect.rect(e,t)},a};function applyNodePropertyBorders(t,e,a,r){const i=[];var s=t=>{i.push(t,0)},n=t=>{i.push(0,t)};e.includes("t")?(log.debug("add top border"),s(a)):n(a),e.includes("r")?(log.debug("add right border"),s(r)):n(r),e.includes("b")?(log.debug("add bottom border"),s(a)):n(a),e.includes("l")?(log.debug("add left border"),s(r)):n(r),t.attr("stroke-dasharray",i.join(" "))}const rectWithTitle=(t,e)=>{let a;a=e.classes?"node "+e.classes:"node default";const r=t.insert("g").attr("class",a).attr("id",e.domId||e.id),i=r.insert("rect",":first-child"),s=r.insert("line"),n=r.insert("g").attr("class","label"),l=e.labelText.flat?e.labelText.flat():e.labelText;let o="";o="object"==typeof l?l[0]:l,log.info("Label text abc79",o,l,"object"==typeof l);const d=n.node().appendChild(createLabel$1(o,e.labelStyle,!0,!0));let c={width:0,height:0};if(evaluate(getConfig().flowchart.htmlLabels)){const y=d.children[0],b=d3select(d);c=y.getBoundingClientRect(),b.attr("width",c.width),b.attr("height",c.height)}log.info("Text 2",l);const h=l.slice(1,l.length);var t=d.getBBox(),g=n.node().appendChild(createLabel$1(h.join?h.join("<br/>"):h,e.labelStyle,!0,!0));if(evaluate(getConfig().flowchart.htmlLabels)){const u=g.children[0],f=d3select(g);c=u.getBoundingClientRect(),f.attr("width",c.width),f.attr("height",c.height)}var p=e.padding/2;return d3select(g).attr("transform","translate( "+(c.width>t.width?0:(t.width-c.width)/2)+", "+(t.height+p+5)+")"),d3select(d).attr("transform","translate( "+(c.width<t.width?0:-(t.width-c.width)/2)+", 0)"),c=n.node().getBBox(),n.attr("transform","translate("+-c.width/2+", "+(-c.height/2-p+3)+")"),i.attr("class","outer title-state").attr("x",-c.width/2-p).attr("y",-c.height/2-p).attr("width",c.width+e.padding).attr("height",c.height+e.padding),s.attr("class","divider").attr("x1",-c.width/2-p).attr("x2",c.width/2+p).attr("y1",-c.height/2-p+t.height+p).attr("y2",-c.height/2-p+t.height+p),updateNodeBounds(e,i),e.intersect=function(t){return intersect.rect(e,t)},r},stadium=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0);var t=r.height+e.padding,i=r.width+t/4+e.padding,i=a.insert("rect",":first-child").attr("style",e.style).attr("rx",t/2).attr("ry",t/2).attr("x",-i/2).attr("y",-t/2).attr("width",i).attr("height",t);return updateNodeBounds(e,i),e.intersect=function(t){return intersect.rect(e,t)},a},circle=async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:i}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),s=a.insert("circle",":first-child");return s.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+i).attr("width",r.width+e.padding).attr("height",r.height+e.padding),log.info("Circle main"),updateNodeBounds(e,s),e.intersect=function(t){return log.info("Circle intersect",e,r.width/2+i,t),intersect.circle(e,r.width/2+i,t)},a},doublecircle=async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:i}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),s=a.insert("g",":first-child"),n=s.insert("circle"),l=s.insert("circle");return s.attr("class",e.class),n.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+i+5).attr("width",r.width+e.padding+10).attr("height",r.height+e.padding+10),l.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+i).attr("width",r.width+e.padding).attr("height",r.height+e.padding),log.info("DoubleCircle main"),updateNodeBounds(e,n),e.intersect=function(t){return log.info("DoubleCircle intersect",e,r.width/2+i+5,t),intersect.circle(e,r.width/2+i+5,t)},a},subroutine=async(t,e)=>{var{shapeSvg:t,bbox:a}=await labelHelper(t,e,getClassesFromNode(e,void 0),!0),r=a.width+e.padding,a=a.height+e.padding;const i=[{x:0,y:0},{x:r,y:0},{x:r,y:-a},{x:0,y:-a},{x:0,y:0},{x:-8,y:0},{x:r+8,y:0},{x:r+8,y:-a},{x:-8,y:-a},{x:-8,y:0}],s=insertPolygonShape(t,r,a,i);return s.attr("style",e.style),updateNodeBounds(e,s),e.intersect=function(t){return intersect.polygon(e,i,t)},t},start=(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child");return r.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),updateNodeBounds(e,r),e.intersect=function(t){return intersect.circle(e,7,t)},a},forkJoin=(t,e,a)=>{const r=t.insert("g").attr("class","node default").attr("id",e.domId||e.id);let i=70,s=10;"LR"===a&&(i=10,s=70);t=r.append("rect").attr("x",-1*i/2).attr("y",-1*s/2).attr("width",i).attr("height",s).attr("class","fork-join");return updateNodeBounds(e,t),e.height=e.height+e.padding/2,e.width=e.width+e.padding/2,e.intersect=function(t){return intersect.rect(e,t)},r},end=(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child"),i=a.insert("circle",":first-child");return i.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),r.attr("class","state-end").attr("r",5).attr("width",10).attr("height",10),updateNodeBounds(e,i),e.intersect=function(t){return intersect.circle(e,7,t)},a},class_box=(t,n)=>{var e=n.padding/2;let a;a=n.classes?"node "+n.classes:"node default";const r=t.insert("g").attr("class",a).attr("id",n.domId||n.id),i=r.insert("rect",":first-child"),s=r.insert("line"),l=r.insert("line");let o=0,d=4;const c=r.insert("g").attr("class","label");let h=0;var t=n.classData.annotations&&n.classData.annotations[0],g=n.classData.annotations[0]?"«"+n.classData.annotations[0]+"»":"";const p=c.node().appendChild(createLabel$1(g,n.labelStyle,!0,!0));let y=p.getBBox();if(evaluate(getConfig().flowchart.htmlLabels)){const x=p.children[0],k=d3select(p);y=x.getBoundingClientRect(),k.attr("width",y.width),k.attr("height",y.height)}n.classData.annotations[0]&&(d+=y.height+4,o+=y.width);let b=n.classData.label;void 0!==n.classData.type&&""!==n.classData.type&&(getConfig().flowchart.htmlLabels?b+="&lt;"+n.classData.type+"&gt;":b+="<"+n.classData.type+">");const u=c.node().appendChild(createLabel$1(b,n.labelStyle,!0,!0));d3select(u).attr("class","classTitle");let f=u.getBBox();if(evaluate(getConfig().flowchart.htmlLabels)){const L=u.children[0],v=d3select(u);f=L.getBoundingClientRect(),v.attr("width",f.width),v.attr("height",f.height)}d+=f.height+4,f.width>o&&(o=f.width);const m=[],w=(n.classData.members.forEach(t=>{t=parseMember(t);let e=t.displayText;getConfig().flowchart.htmlLabels&&(e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const a=c.node().appendChild(createLabel$1(e,t.cssStyle||n.labelStyle,!0,!0));let r=a.getBBox();if(evaluate(getConfig().flowchart.htmlLabels)){const i=a.children[0],s=d3select(a);r=i.getBoundingClientRect(),s.attr("width",r.width),s.attr("height",r.height)}r.width>o&&(o=r.width),d+=r.height+4,m.push(a)}),d+=8,[]);n.classData.methods.forEach(t=>{t=parseMember(t);let e=t.displayText;getConfig().flowchart.htmlLabels&&(e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const a=c.node().appendChild(createLabel$1(e,t.cssStyle||n.labelStyle,!0,!0));let r=a.getBBox();if(evaluate(getConfig().flowchart.htmlLabels)){const i=a.children[0],s=d3select(a);r=i.getBoundingClientRect(),s.attr("width",r.width),s.attr("height",r.height)}r.width>o&&(o=r.width),d+=r.height+4,w.push(a)}),d+=8,t&&(g=(o-y.width)/2,d3select(p).attr("transform","translate( "+(-1*o/2+g)+", "+-1*d/2+")"),h=y.height+4);t=(o-f.width)/2;return d3select(u).attr("transform","translate( "+(-1*o/2+t)+", "+(-1*d/2+h)+")"),h+=f.height+4,s.attr("class","divider").attr("x1",-o/2-e).attr("x2",o/2+e).attr("y1",-d/2-e+8+h).attr("y2",-d/2-e+8+h),h+=8,m.forEach(t=>{d3select(t).attr("transform","translate( "+-o/2+", "+(-1*d/2+h+4)+")");t=null==t?void 0:t.getBBox();h+=((null==t?void 0:t.height)??0)+4}),h+=8,l.attr("class","divider").attr("x1",-o/2-e).attr("x2",o/2+e).attr("y1",-d/2-e+8+h).attr("y2",-d/2-e+8+h),h+=8,w.forEach(t=>{d3select(t).attr("transform","translate( "+-o/2+", "+(-1*d/2+h)+")");t=null==t?void 0:t.getBBox();h+=((null==t?void 0:t.height)??0)+4}),i.attr("class","outer title-state").attr("x",-o/2-e).attr("y",-d/2-e).attr("width",o+n.padding).attr("height",d+n.padding),updateNodeBounds(n,i),n.intersect=function(t){return intersect.rect(n,t)},r},shapes={rhombus:question,question:question,rect:rect,labelRect:labelRect,rectWithTitle:rectWithTitle,choice:choice,circle:circle,doublecircle:doublecircle,stadium:stadium,hexagon:hexagon,rect_left_inv_arrow:rect_left_inv_arrow,lean_right:lean_right,lean_left:lean_left,trapezoid:trapezoid,inv_trapezoid:inv_trapezoid,rect_right_inv_arrow:rect_right_inv_arrow,cylinder:cylinder,start:start,end:end,note:note$1,subroutine:subroutine,fork:forkJoin,join:forkJoin,class_box:class_box};let nodeElems={};const insertNode=async(e,a,r)=>{let i,s;if(a.link){let t;"sandbox"===getConfig().securityLevel?t="_top":a.linkTarget&&(t=a.linkTarget||"_blank"),i=e.insert("svg:a").attr("xlink:href",a.link).attr("target",t),s=await shapes[a.shape](i,a,r)}else s=await shapes[a.shape](e,a,r),i=s;return a.tooltip&&s.attr("title",a.tooltip),a.class&&s.attr("class","node default "+a.class),nodeElems[a.id]=i,a.haveCallback&&nodeElems[a.id].attr("class",nodeElems[a.id].attr("class")+" clickable"),i},setNodeElem=(t,e)=>{nodeElems[e.id]=t},clear$1=()=>{nodeElems={}},positionNode=t=>{const e=nodeElems[t.id];log.trace("Transforming node",t.diff,t,"translate("+(t.x-t.width/2-5)+", "+t.width/2+")");var a=t.diff||0;return t.clusterNode?e.attr("transform","translate("+(t.x+a-t.width/2)+", "+(t.y-t.height/2-8)+")"):e.attr("transform","translate("+t.x+", "+t.y+")"),a};let edgeLabels={},terminalLabels={};const clear=()=>{edgeLabels={},terminalLabels={}},insertEdgeLabel=(t,e)=>{var a=evaluate(getConfig().flowchart.htmlLabels);const r="markdown"===e.labelType?createText(t,e.label,{style:e.labelStyle,useHtmlLabels:a,addSvgBackground:!0}):createLabel$1(e.label,e.labelStyle),i=(log.info("abc82",e,e.labelType),t.insert("g").attr("class","edgeLabel")),s=i.insert("g").attr("class","label");s.node().appendChild(r);let n=r.getBBox();if(a){const o=r.children[0],d=d3select(r);n=o.getBoundingClientRect(),d.attr("width",n.width),d.attr("height",n.height)}s.attr("transform","translate("+-n.width/2+", "+-n.height/2+")"),edgeLabels[e.id]=i,e.width=n.width,e.height=n.height;let l;if(e.startLabelLeft){const c=createLabel$1(e.startLabelLeft,e.labelStyle),h=t.insert("g").attr("class","edgeTerminals"),g=h.insert("g").attr("class","inner");l=g.node().appendChild(c);a=c.getBBox();g.attr("transform","translate("+-a.width/2+", "+-a.height/2+")"),terminalLabels[e.id]||(terminalLabels[e.id]={}),terminalLabels[e.id].startLeft=h,setTerminalWidth(l,e.startLabelLeft)}if(e.startLabelRight){const p=createLabel$1(e.startLabelRight,e.labelStyle),y=t.insert("g").attr("class","edgeTerminals"),b=y.insert("g").attr("class","inner");l=y.node().appendChild(p),b.node().appendChild(p);a=p.getBBox();b.attr("transform","translate("+-a.width/2+", "+-a.height/2+")"),terminalLabels[e.id]||(terminalLabels[e.id]={}),terminalLabels[e.id].startRight=y,setTerminalWidth(l,e.startLabelRight)}if(e.endLabelLeft){const u=createLabel$1(e.endLabelLeft,e.labelStyle),f=t.insert("g").attr("class","edgeTerminals"),m=f.insert("g").attr("class","inner");l=m.node().appendChild(u);a=u.getBBox();m.attr("transform","translate("+-a.width/2+", "+-a.height/2+")"),f.node().appendChild(u),terminalLabels[e.id]||(terminalLabels[e.id]={}),terminalLabels[e.id].endLeft=f,setTerminalWidth(l,e.endLabelLeft)}if(e.endLabelRight){const w=createLabel$1(e.endLabelRight,e.labelStyle),x=t.insert("g").attr("class","edgeTerminals"),k=x.insert("g").attr("class","inner");l=k.node().appendChild(w);a=w.getBBox();k.attr("transform","translate("+-a.width/2+", "+-a.height/2+")"),x.node().appendChild(w),terminalLabels[e.id]||(terminalLabels[e.id]={}),terminalLabels[e.id].endRight=x,setTerminalWidth(l,e.endLabelRight)}return r};function setTerminalWidth(t,e){getConfig().flowchart.htmlLabels&&t&&(t.style.width=9*e.length+"px",t.style.height="12px")}const positionEdgeLabel=(a,r)=>{log.info("Moving label abc78 ",a.id,a.label,edgeLabels[a.id]);var i,s=r.updatedPath||r.originalPath;if(a.label){const n=edgeLabels[a.id];let t=a.x,e=a.y;s&&(i=utils.calcLabelPosition(s),log.info("Moving label "+a.label+" from (",t,",",e,") to (",i.x,",",i.y,") abc78"),r.updatedPath&&(t=i.x,e=i.y)),n.attr("transform","translate("+t+", "+e+")")}if(a.startLabelLeft){const l=terminalLabels[a.id].startLeft;let t=a.x,e=a.y;s&&(r=utils.calcTerminalLabelPosition(a.arrowTypeStart?10:0,"start_left",s),t=r.x,e=r.y),l.attr("transform","translate("+t+", "+e+")")}if(a.startLabelRight){const o=terminalLabels[a.id].startRight;let t=a.x,e=a.y;s&&(i=utils.calcTerminalLabelPosition(a.arrowTypeStart?10:0,"start_right",s),t=i.x,e=i.y),o.attr("transform","translate("+t+", "+e+")")}if(a.endLabelLeft){const d=terminalLabels[a.id].endLeft;let t=a.x,e=a.y;s&&(r=utils.calcTerminalLabelPosition(a.arrowTypeEnd?10:0,"end_left",s),t=r.x,e=r.y),d.attr("transform","translate("+t+", "+e+")")}if(a.endLabelRight){const c=terminalLabels[a.id].endRight;let t=a.x,e=a.y;s&&(i=utils.calcTerminalLabelPosition(a.arrowTypeEnd?10:0,"end_right",s),t=i.x,e=i.y),c.attr("transform","translate("+t+", "+e+")")}},outsideNode=(t,e)=>{var a=t.x,r=t.y,a=Math.abs(e.x-a),e=Math.abs(e.y-r),r=t.width/2,t=t.height/2;return r<=a||t<=e},intersection=(a,r,i)=>{log.warn(`intersection calc abc89:
  outsidePoint: ${JSON.stringify(r)}
  insidePoint : ${JSON.stringify(i)}
  node        : x:${a.x} y:${a.y} w:${a.width} h:`+a.height);var s=a.x,t=a.y,n=Math.abs(s-i.x),l=a.width/2;let o=i.x<r.x?l-n:l+n;var n=a.height/2,a=Math.abs(r.y-i.y),d=Math.abs(r.x-i.x);if(Math.abs(t-r.y)*l>Math.abs(s-r.x)*n){t=i.y<r.y?r.y-n-t:t-n-r.y;o=d*t/a;const e={x:i.x<r.x?i.x+o:i.x-d+o,y:i.y<r.y?i.y+a-t:i.y-a+t};return 0===o&&(e.x=r.x,e.y=r.y),0===d&&(e.x=r.x),0===a&&(e.y=r.y),log.warn(`abc89 topp/bott calc, Q ${a}, q ${t}, R ${d}, r `+o,e),e}{n=a*(o=i.x<r.x?r.x-l-s:s-l-r.x)/d;let t=i.x<r.x?i.x+d-o:i.x-d+o,e=i.y<r.y?i.y+n:i.y-n;return log.warn(`sides calc abc89, Q ${a}, q ${n}, R ${d}, r `+o,{_x:t,_y:e}),0===o&&(t=r.x,e=r.y),0===d&&(t=r.x),0===a&&(e=r.y),{x:t,y:e}}},cutPathAtIntersect=(t,r)=>{log.warn("abc88 cutPathAtIntersect",t,r);let i=[],s=t[0],n=!1;return t.forEach(t=>{if(log.info("abc88 checking point",t,r),outsideNode(r,t)||n)log.warn("abc88 outside",t,s),s=t,n||i.push(t);else{const a=intersection(r,s,t);log.warn("abc88 inside",t,s,a),log.warn("abc88 intersection",a);let e=!1;i.forEach(t=>{e=e||t.x===a.x&&t.y===a.y}),i.some(t=>t.x===a.x&&t.y===a.y)?log.warn("abc88 no intersect",a,i):i.push(a),n=!0}}),log.warn("abc88 returning points",i),i},insertEdge=function(t,e,a,r,i,s){let n=a.points,l=!1;const o=s.node(e.v);s=s.node(e.w),log.info("abc88 InsertEdge: ",a),s.intersect&&o.intersect&&((n=n.slice(1,a.points.length-1)).unshift(o.intersect(n[0])),log.info("Last point",n[n.length-1],s,s.intersect(n[n.length-1])),n.push(s.intersect(n[n.length-1]))),a.toCluster&&(log.info("to cluster abc88",r[a.toCluster]),n=cutPathAtIntersect(a.points,r[a.toCluster].node),l=!0),a.fromCluster&&(log.info("from cluster abc88",r[a.fromCluster]),n=cutPathAtIntersect(n.reverse(),r[a.fromCluster].node).reverse(),l=!0),e=n.filter(t=>!Number.isNaN(t.y));let d;d=("graph"===i||"flowchart"===i)&&a.curve||curveBasis;const c=line().x(function(t){return t.x}).y(function(t){return t.y}).curve(d);let h;switch(a.thickness){case"normal":h="edge-thickness-normal";break;case"thick":case"invisible":h="edge-thickness-thick";break;default:h=""}switch(a.pattern){case"solid":h+=" edge-pattern-solid";break;case"dotted":h+=" edge-pattern-dotted";break;case"dashed":h+=" edge-pattern-dashed"}const g=t.append("path").attr("d",c(e)).attr("id",a.id).attr("class"," "+h+(a.classes?" "+a.classes:"")).attr("style",a.style);let p="";switch((getConfig().flowchart.arrowMarkerAbsolute||getConfig().state.arrowMarkerAbsolute)&&(p=(p=(p=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search).replace(/\(/g,"\\(")).replace(/\)/g,"\\)")),log.info("arrowTypeStart",a.arrowTypeStart),log.info("arrowTypeEnd",a.arrowTypeEnd),a.arrowTypeStart){case"arrow_cross":g.attr("marker-start","url("+p+"#"+i+"-crossStart)");break;case"arrow_point":g.attr("marker-start","url("+p+"#"+i+"-pointStart)");break;case"arrow_barb":g.attr("marker-start","url("+p+"#"+i+"-barbStart)");break;case"arrow_circle":g.attr("marker-start","url("+p+"#"+i+"-circleStart)");break;case"aggregation":g.attr("marker-start","url("+p+"#"+i+"-aggregationStart)");break;case"extension":g.attr("marker-start","url("+p+"#"+i+"-extensionStart)");break;case"composition":g.attr("marker-start","url("+p+"#"+i+"-compositionStart)");break;case"dependency":g.attr("marker-start","url("+p+"#"+i+"-dependencyStart)");break;case"lollipop":g.attr("marker-start","url("+p+"#"+i+"-lollipopStart)")}switch(a.arrowTypeEnd){case"arrow_cross":g.attr("marker-end","url("+p+"#"+i+"-crossEnd)");break;case"arrow_point":g.attr("marker-end","url("+p+"#"+i+"-pointEnd)");break;case"arrow_barb":g.attr("marker-end","url("+p+"#"+i+"-barbEnd)");break;case"arrow_circle":g.attr("marker-end","url("+p+"#"+i+"-circleEnd)");break;case"aggregation":g.attr("marker-end","url("+p+"#"+i+"-aggregationEnd)");break;case"extension":g.attr("marker-end","url("+p+"#"+i+"-extensionEnd)");break;case"composition":g.attr("marker-end","url("+p+"#"+i+"-compositionEnd)");break;case"dependency":g.attr("marker-end","url("+p+"#"+i+"-dependencyEnd)");break;case"lollipop":g.attr("marker-end","url("+p+"#"+i+"-lollipopEnd)")}let y={};return l&&(y.updatedPath=n),y.originalPath=a.points,y};export{insertMarkers$1 as a,clear$1 as b,createLabel$1 as c,clear as d,insertNode as e,insertEdgeLabel as f,insertEdge as g,positionEdgeLabel as h,intersectRect$1 as i,labelHelper as l,positionNode as p,setNodeElem as s,updateNodeBounds as u};