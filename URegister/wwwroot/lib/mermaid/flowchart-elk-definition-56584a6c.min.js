import{d as db,p as parser}from"./flowDb-ff651a22.js";import{select,curveLinear,line}from"d3";import{a as insertMarkers,e as insertNode,l as labelHelper,f as insertEdgeLabel}from"./edges-0005682e.js";import"dagre-d3-es/src/dagre-js/label/add-html-label.js";import{l as log,c as getConfig,p as setupGraphViewbox,k as getStylesFromArray,o as interpolateToCurve,e as common}from"./mermaid-768dc893.js";import ELK from"elkjs/lib/elk.bundled.js";import"./createText-3b1f58a4.js";import"mdast-util-from-markdown";import"ts-dedent";import"./svgDraw-70101091.js";import"dayjs";import"@braintree/sanitize-url";import"dompurify";import"khroma";import"lodash-es/memoize.js";import"lodash-es/merge.js";import"stylis";import"lodash-es/isEmpty.js";const findCommonAncestor=(e,t,r)=>{var o=r["parentById"];const a=new Set;let s=e;for(;s;){if(a.add(s),s===t)return s;s=o[s]}for(s=t;s;){if(a.has(s))return s;s=o[s]}return"root"},elk=new ELK;let portPos={};const conf={};let nodeDb={};const addVertices=async function(b,e,t,u,y,w,r){const o=t.select(`[id="${e}"]`),f=o.insert("g").attr("class","nodes"),a=Object.keys(b);return await Promise.all(a.map(async function(e){const t=b[e];let r="default";0<t.classes.length&&(r=t.classes.join(" ")),r+=" flowchart-label";var e=getStylesFromArray(t.styles),o=void 0!==t.text?t.text:t.id;const a={width:0,height:0};var s=[{id:t.id+"-west",layoutOptions:{"port.side":"WEST"}},{id:t.id+"-east",layoutOptions:{"port.side":"EAST"}},{id:t.id+"-south",layoutOptions:{"port.side":"SOUTH"}},{id:t.id+"-north",layoutOptions:{"port.side":"NORTH"}}];let l=0,i="",n={};switch(t.type){case"round":l=5,i="rect";break;case"square":i="rect";break;case"diamond":i="question",n={portConstraints:"FIXED_SIDE"};break;case"hexagon":i="hexagon";break;case"odd":i="rect_left_inv_arrow";break;case"lean_right":i="lean_right";break;case"lean_left":i="lean_left";break;case"trapezoid":i="trapezoid";break;case"inv_trapezoid":i="inv_trapezoid";break;case"odd_right":i="rect_left_inv_arrow";break;case"circle":i="circle";break;case"ellipse":i="ellipse";break;case"stadium":i="stadium";break;case"subroutine":i="subroutine";break;case"cylinder":i="cylinder";break;case"group":i="rect";break;case"doublecircle":i="doublecircle";break;default:i="rect"}const d={labelStyle:e.labelStyle,shape:i,labelText:o,labelType:t.labelType,rx:l,ry:l,class:r,style:e.style,id:t.id,link:t.link,linkTarget:t.linkTarget,tooltip:y.db.getTooltip(t.id)||"",domId:y.db.lookUpDomId(t.id),haveCallback:t.haveCallback,width:"group"===t.type?500:void 0,dir:t.dir,type:t.type,props:t.props,padding:getConfig().flowchart.padding};let c,p;if("group"!==d.type)p=await insertNode(f,d,t.dir),c=p.node().getBBox();else{u.createElementNS("http://www.w3.org/2000/svg","text");const{shapeSvg:h,bbox:g}=await labelHelper(f,d,void 0,!0);a.width=g.width,a.wrappingWidth=getConfig().flowchart.wrappingWidth,a.height=g.height,a.labelNode=h.node(),d.labelData=a}e={id:t.id,ports:"diamond"===t.type?s:[],layoutOptions:n,labelText:o,labelData:a,domId:y.db.lookUpDomId(t.id),width:null==c?void 0:c.width,height:null==c?void 0:c.height,type:t.type,el:p,parent:w.parentById[t.id]};nodeDb[d.id]=e})),r},getNextPosition=(e,t,r)=>{const o={TB:{in:{north:"north"},out:{south:"west",west:"east",east:"south"}},LR:{in:{west:"west"},out:{east:"south",south:"north",north:"east"}},RL:{in:{east:"east"},out:{west:"north",north:"south",south:"west"}},BT:{in:{south:"south"},out:{north:"east",east:"west",west:"north"}}};return o.TD=o.TB,log.info("abc88",r,t,e),o[r][t][e]},getNextPort=(e,t,r)=>{if(log.info("getNextPort abc88",{node:e,edgeDirection:t,graphDirection:r}),!portPos[e])switch(r){case"TB":case"TD":portPos[e]={inPosition:"north",outPosition:"south"};break;case"BT":portPos[e]={inPosition:"south",outPosition:"north"};break;case"RL":portPos[e]={inPosition:"east",outPosition:"west"};break;case"LR":portPos[e]={inPosition:"west",outPosition:"east"}}var o="in"===t?portPos[e].inPosition:portPos[e].outPosition;return"in"===t?portPos[e].inPosition=getNextPosition(portPos[e].inPosition,t,r):portPos[e].outPosition=getNextPosition(portPos[e].outPosition,t,r),o},getEdgeStartEndPoint=(e,t)=>{let r=e.start,o=e.end;var e=r,a=o,s=nodeDb[r],l=nodeDb[o];return s&&l?("diamond"===s.type&&(r=r+"-"+getNextPort(r,"out",t)),"diamond"===l.type&&(o=o+"-"+getNextPort(o,"in",t)),{source:r,target:o,sourceId:e,targetId:a}):{source:r,target:o}},addEdges=function(d,e,c,t){log.info("abc78 edges = ",d);const p=t.insert("g").attr("class","edgeLabels");let h={},g=e.db.getDirection(),b,u;return void 0!==d.defaultStyle&&(t=getStylesFromArray(d.defaultStyle),b=t.style,u=t.labelStyle),d.forEach(function(e){var t="L-"+e.start+"-"+e.end,r=(void 0===h[t]?h[t]=0:h[t]++,log.info("abc78 new entry",t,h[t]),t+"-"+h[t]),t=(log.info("abc78 new link id to be used is",t,r,h[t]),"LS-"+e.start),o="LE-"+e.end;const a={style:"",labelStyle:""};switch(a.minlen=e.length||1,"arrow_open"===e.type?a.arrowhead="none":a.arrowhead="normal",a.arrowTypeStart="arrow_open",a.arrowTypeEnd="arrow_open",e.type){case"double_arrow_cross":a.arrowTypeStart="arrow_cross";case"arrow_cross":a.arrowTypeEnd="arrow_cross";break;case"double_arrow_point":a.arrowTypeStart="arrow_point";case"arrow_point":a.arrowTypeEnd="arrow_point";break;case"double_arrow_circle":a.arrowTypeStart="arrow_circle";case"arrow_circle":a.arrowTypeEnd="arrow_circle"}let s="",l="";switch(e.stroke){case"normal":s="fill:none;",void 0!==b&&(s=b),void 0!==u&&(l=u),a.thickness="normal",a.pattern="solid";break;case"dotted":a.thickness="normal",a.pattern="dotted",a.style="fill:none;stroke-width:2px;stroke-dasharray:3;";break;case"thick":a.thickness="thick",a.pattern="solid",a.style="stroke-width: 3.5px;fill:none;"}void 0!==e.style&&(i=getStylesFromArray(e.style),s=i.style,l=i.labelStyle),a.style=a.style+=s,a.labelStyle=a.labelStyle+=l,void 0!==e.interpolate?a.curve=interpolateToCurve(e.interpolate,curveLinear):void 0!==d.defaultInterpolate?a.curve=interpolateToCurve(d.defaultInterpolate,curveLinear):a.curve=interpolateToCurve(conf.curve,curveLinear),void 0===e.text?void 0!==e.style&&(a.arrowheadStyle="fill: #333"):(a.arrowheadStyle="fill: #333",a.labelpos="c"),a.labelType=e.labelType,a.label=e.text.replace(common.lineBreakRegex,"\n"),void 0===e.style&&(a.style=a.style||"stroke: #333; stroke-width: 1.5px;fill:none;"),a.labelStyle=a.labelStyle.replace("color:","fill:"),a.id=r,a.classes="flowchart-link "+t+" "+o;var i=insertEdgeLabel(p,a),{source:r,target:t,sourceId:o,targetId:n}=getEdgeStartEndPoint(e,g);log.debug("abc78 source and target",r,t),c.edges.push({id:"e"+e.start+e.end,sources:[r],targets:[t],sourceId:o,targetId:n,labelEl:i,labels:[{width:a.width,height:a.height,orgWidth:a.width,orgHeight:a.height,text:a.label,layoutOptions:{"edgeLabels.inline":"true","edgeLabels.placement":"CENTER"}}],edgeData:a})}),c},addMarkersToEdge=function(e,t,r,o){let a="";switch(o&&(a=(a=(a=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search).replace(/\(/g,"\\(")).replace(/\)/g,"\\)")),t.arrowTypeStart){case"arrow_cross":e.attr("marker-start","url("+a+"#"+r+"-crossStart)");break;case"arrow_point":e.attr("marker-start","url("+a+"#"+r+"-pointStart)");break;case"arrow_barb":e.attr("marker-start","url("+a+"#"+r+"-barbStart)");break;case"arrow_circle":e.attr("marker-start","url("+a+"#"+r+"-circleStart)");break;case"aggregation":e.attr("marker-start","url("+a+"#"+r+"-aggregationStart)");break;case"extension":e.attr("marker-start","url("+a+"#"+r+"-extensionStart)");break;case"composition":e.attr("marker-start","url("+a+"#"+r+"-compositionStart)");break;case"dependency":e.attr("marker-start","url("+a+"#"+r+"-dependencyStart)");break;case"lollipop":e.attr("marker-start","url("+a+"#"+r+"-lollipopStart)")}switch(t.arrowTypeEnd){case"arrow_cross":e.attr("marker-end","url("+a+"#"+r+"-crossEnd)");break;case"arrow_point":e.attr("marker-end","url("+a+"#"+r+"-pointEnd)");break;case"arrow_barb":e.attr("marker-end","url("+a+"#"+r+"-barbEnd)");break;case"arrow_circle":e.attr("marker-end","url("+a+"#"+r+"-circleEnd)");break;case"aggregation":e.attr("marker-end","url("+a+"#"+r+"-aggregationEnd)");break;case"extension":e.attr("marker-end","url("+a+"#"+r+"-extensionEnd)");break;case"composition":e.attr("marker-end","url("+a+"#"+r+"-compositionEnd)");break;case"dependency":e.attr("marker-end","url("+a+"#"+r+"-dependencyEnd)");break;case"lollipop":e.attr("marker-end","url("+a+"#"+r+"-lollipopEnd)")}},getClasses=function(e,t){return log.info("Extracting classes"),t.db.getClasses()},addSubGraphs=function(e){const r={parentById:{},childrenById:{}},t=e.getSubGraphs();return log.info("Subgraphs - ",t),t.forEach(function(t){t.nodes.forEach(function(e){r.parentById[e]=t.id,void 0===r.childrenById[t.id]&&(r.childrenById[t.id]=[]),r.childrenById[t.id].push(e)})}),t.forEach(function(e){e.id,void 0!==r.parentById[e.id]&&r.parentById[e.id]}),r},calcOffset=function(e,t,r){e=findCommonAncestor(e,t,r);if(void 0===e||"root"===e)return{x:0,y:0};t=nodeDb[e].offset;return{x:t.posX,y:t.posY}},insertEdge=function(e,t,r,o,a){const s=calcOffset(t.sourceId,t.targetId,a);var a=t.sections[0].startPoint,l=t.sections[0].endPoint;const i=t.sections[0].bendPoints||[];var n=i.map(e=>[e.x+s.x,e.y+s.y]),a=[[a.x+s.x,a.y+s.y],...n,[l.x+s.x,l.y+s.y]];const d=line().curve(curveLinear);n=e.insert("path").attr("d",d(a)).attr("class","path "+r.classes).attr("fill","none");const c=e.insert("g").attr("class","edgeLabel"),p=select(c.node().appendChild(t.labelEl));l=p.node().firstChild.getBoundingClientRect();p.attr("width",l.width),p.attr("height",l.height),c.attr("transform",`translate(${t.labels[0].x+s.x}, ${t.labels[0].y+s.y})`),addMarkersToEdge(n,r,o.type,o.arrowMarkerAbsolute)},insertChildren=(e,r)=>{e.forEach(t=>{t.children||(t.children=[]);const e=r.childrenById[t.id];e&&e.forEach(e=>{t.children.push(nodeDb[e])}),insertChildren(t.children,r)})},draw=async function(e,t,r,o){nodeDb={},portPos={};const a=select("body").append("div").attr("style","height:400px").attr("id","cy");let s={id:"root",layoutOptions:{"elk.hierarchyHandling":"INCLUDE_CHILDREN","org.eclipse.elk.padding":"[top=100, left=100, bottom=110, right=110]","elk.layered.spacing.edgeNodeBetweenLayers":"30","elk.direction":"DOWN"},children:[],edges:[]};switch(log.info("Drawing flowchart using v3 renderer",elk),o.db.getDirection()){case"BT":s.layoutOptions["elk.direction"]="UP";break;case"TB":s.layoutOptions["elk.direction"]="DOWN";break;case"LR":s.layoutOptions["elk.direction"]="RIGHT";break;case"RL":s.layoutOptions["elk.direction"]="LEFT"}var{securityLevel:l,flowchart:i}=getConfig();let n;"sandbox"===l&&(n=select("#i"+t));const d=select("sandbox"===l?n.nodes()[0].contentDocument.body:"body");var l="sandbox"===l?n.nodes()[0].contentDocument:document;const c=d.select(`[id="${t}"]`);insertMarkers(c,["point","circle","cross"],o.type,o.arrowMarkerAbsolute);var p,h=o.db.getVertices(),g=o.db.getSubGraphs();log.info("Subgraphs - ",g);for(let e=g.length-1;0<=e;e--)p=g[e],o.db.addVertex(p.id,{text:p.title,type:p.labelType},"group",void 0,p.classes,p.dir);var b=c.insert("g").attr("class","subgraphs");const u=addSubGraphs(o.db),y=(s=await addVertices(h,t,d,l,o,u,s),c.insert("g").attr("class","edges edgePath"));h=o.db.getEdges();s=addEdges(h,o,s,c);const w=Object.keys(nodeDb);w.forEach(e=>{const t=nodeDb[e];t.parent||s.children.push(t),void 0!==u.childrenById[e]&&(t.labels=[{text:t.labelText,layoutOptions:{"nodeLabels.placement":"[H_CENTER, V_TOP, INSIDE]"},width:t.labelData.width,height:t.labelData.height}],delete t.x,delete t.y,delete t.width,delete t.height)}),insertChildren(s.children,u),log.info("after layout",JSON.stringify(s,null,2));t=await elk.layout(s);drawNodes(0,0,t.children,c,b,o,0),log.info("after layout",t),null!=(l=t.edges)&&l.map(e=>{insertEdge(y,e,e.edgeData,o,u)}),setupGraphViewbox({},c,i.diagramPadding,i.useMaxWidth),a.remove()},drawNodes=(a,s,e,t,l,r,i)=>{e.forEach(function(e){if(e)if(nodeDb[e.id].offset={posX:e.x+a,posY:e.y+s,x:a,y:s,depth:i,width:e.width,height:e.height},"group"===e.type){const r=l.insert("g").attr("class","subgraph"),o=(r.insert("rect").attr("class","subgraph subgraph-lvl-"+i%5+" node").attr("x",e.x+a).attr("y",e.y+s).attr("width",e.width).attr("height",e.height),r.insert("g").attr("class","label"));var t=getConfig().flowchart.htmlLabels?e.labelData.width/2:0;o.attr("transform",`translate(${e.labels[0].x+a+e.x+t}, ${e.labels[0].y+s+e.y+3})`),o.node().appendChild(e.labelData.labelNode),log.info("Id (UGH)= ",e.type,e.labels)}else log.info("Id (UGH)= ",e.id),e.el.attr("transform",`translate(${e.x+a+e.width/2}, ${e.y+s+e.height/2})`)}),e.forEach(function(e){e&&"group"===e.type&&drawNodes(a+e.x,s+e.y,e.children,t,l,r,i+1)})},renderer={getClasses:getClasses,draw:draw},genSections=t=>{let r="";for(let e=0;e<5;e++)r+=`
      .subgraph-lvl-${e} {
        fill: ${t["surface"+e]};
        stroke: ${t["surfacePeer"+e]};
      }
    `;return r},getStyles=e=>`.label {
    font-family: ${e.fontFamily};
    color: ${e.nodeTextColor||e.textColor};
  }
  .cluster-label text {
    fill: ${e.titleColor};
  }
  .cluster-label span {
    color: ${e.titleColor};
  }

  .label text,span {
    fill: ${e.nodeTextColor||e.textColor};
    color: ${e.nodeTextColor||e.textColor};
  }

  .node rect,
  .node circle,
  .node ellipse,
  .node polygon,
  .node path {
    fill: ${e.mainBkg};
    stroke: ${e.nodeBorder};
    stroke-width: 1px;
  }

  .node .label {
    text-align: center;
  }
  .node.clickable {
    cursor: pointer;
  }

  .arrowheadPath {
    fill: ${e.arrowheadColor};
  }

  .edgePath .path {
    stroke: ${e.lineColor};
    stroke-width: 2.0px;
  }

  .flowchart-link {
    stroke: ${e.lineColor};
    fill: none;
  }

  .edgeLabel {
    background-color: ${e.edgeLabelBackground};
    rect {
      opacity: 0.85;
      background-color: ${e.edgeLabelBackground};
      fill: ${e.edgeLabelBackground};
    }
    text-align: center;
  }

  .cluster rect {
    fill: ${e.clusterBkg};
    stroke: ${e.clusterBorder};
    stroke-width: 1px;
  }

  .cluster text {
    fill: ${e.titleColor};
  }

  .cluster span {
    color: ${e.titleColor};
  }
  /* .cluster div {
    color: ${e.titleColor};
  } */

  div.mermaidTooltip {
    position: absolute;
    text-align: center;
    max-width: 200px;
    padding: 2px;
    font-family: ${e.fontFamily};
    font-size: 12px;
    background: ${e.tertiaryColor};
    border: 1px solid ${e.border2};
    border-radius: 2px;
    pointer-events: none;
    z-index: 100;
  }

  .flowchartTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${e.textColor};
  }
  .subgraph {
    stroke-width:2;
    rx:3;
  }
  // .subgraph-lvl-1 {
  //   fill:#ccc;
  //   // stroke:black;
  // }

  .flowchart-label text {
    text-anchor: middle;
  }

  ${genSections(e)}
`,styles=getStyles,diagram={db:db,renderer:renderer,parser:parser,styles:styles};export{diagram};