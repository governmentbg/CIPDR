import*as graphlib from"dagre-d3-es/src/graphlib/index.js";import{curveLinear,select,selectAll}from"d3";import{k as getStylesFromArray,l as log,n as evaluate,c as getConfig,e as common,o as interpolateToCurve,u as utils,p as setupGraphViewbox}from"./mermaid-768dc893.js";import{r as render}from"./index-f58d48f9.js";import{addHtmlLabel}from"dagre-d3-es/src/dagre-js/label/add-html-label.js";import*as khroma from"khroma";const conf={},setConf=function(e){for(const t of Object.keys(e))conf[t]=e[t]},addVertices=function(p,b,e,t,g,f){const w=t.select(`[id="${e}"]`),r=Object.keys(p);r.forEach(function(e){const t=p[e];let r="default";0<t.classes.length&&(r=t.classes.join(" ")),r+=" flowchart-label";const l=getStylesFromArray(t.styles);let o=void 0!==t.text?t.text:t.id,a;if(log.info("vertex",t,t.labelType),"markdown"===t.labelType)log.info("vertex",t,t.labelType);else if(evaluate(getConfig().flowchart.htmlLabels)){e={label:o.replace(/fa[blrs]?:fa-[\w-]+/g,e=>`<i class='${e.replace(":"," ")}'></i>`)};(a=addHtmlLabel(w,e).node()).parentNode.removeChild(a)}else{const i=g.createElementNS("http://www.w3.org/2000/svg","text");i.setAttribute("style",l.labelStyle.replace("color:","fill:"));for(const d of o.split(common.lineBreakRegex)){const c=g.createElementNS("http://www.w3.org/2000/svg","tspan");c.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),c.setAttribute("dy","1em"),c.setAttribute("x","1"),c.textContent=d,i.appendChild(c)}a=i}let s=0,n="";switch(t.type){case"round":s=5,n="rect";break;case"square":n="rect";break;case"diamond":n="question";break;case"hexagon":n="hexagon";break;case"odd":n="rect_left_inv_arrow";break;case"lean_right":n="lean_right";break;case"lean_left":n="lean_left";break;case"trapezoid":n="trapezoid";break;case"inv_trapezoid":n="inv_trapezoid";break;case"odd_right":n="rect_left_inv_arrow";break;case"circle":n="circle";break;case"ellipse":n="ellipse";break;case"stadium":n="stadium";break;case"subroutine":n="subroutine";break;case"cylinder":n="cylinder";break;case"group":n="rect";break;case"doublecircle":n="doublecircle";break;default:n="rect"}b.setNode(t.id,{labelStyle:l.labelStyle,shape:n,labelText:o,labelType:t.labelType,rx:s,ry:s,class:r,style:l.style,id:t.id,link:t.link,linkTarget:t.linkTarget,tooltip:f.db.getTooltip(t.id)||"",domId:f.db.lookUpDomId(t.id),haveCallback:t.haveCallback,width:"group"===t.type?500:void 0,dir:t.dir,type:t.type,props:t.props,padding:getConfig().flowchart.padding}),log.info("setNode",{labelStyle:l.labelStyle,labelType:t.labelType,shape:n,labelText:o,rx:s,ry:s,class:r,style:l.style,id:t.id,domId:f.db.lookUpDomId(t.id),width:"group"===t.type?500:void 0,type:t.type,dir:t.dir,props:t.props,padding:getConfig().flowchart.padding})})},addEdges=function(i,d,e){log.info("abc78 edges = ",i);let c=0,p={},b,g;var t;void 0!==i.defaultStyle&&(t=getStylesFromArray(i.defaultStyle),b=t.style,g=t.labelStyle),i.forEach(function(e){c++;var t,r="L-"+e.start+"-"+e.end,l=(void 0===p[r]?p[r]=0:p[r]++,log.info("abc78 new entry",r,p[r]),r+"-"+p[r]),r=(log.info("abc78 new link id to be used is",r,l,p[r]),"LS-"+e.start),o="LE-"+e.end;const a={style:"",labelStyle:""};switch(a.minlen=e.length||1,"arrow_open"===e.type?a.arrowhead="none":a.arrowhead="normal",a.arrowTypeStart="arrow_open",a.arrowTypeEnd="arrow_open",e.type){case"double_arrow_cross":a.arrowTypeStart="arrow_cross";case"arrow_cross":a.arrowTypeEnd="arrow_cross";break;case"double_arrow_point":a.arrowTypeStart="arrow_point";case"arrow_point":a.arrowTypeEnd="arrow_point";break;case"double_arrow_circle":a.arrowTypeStart="arrow_circle";case"arrow_circle":a.arrowTypeEnd="arrow_circle"}let s="",n="";switch(e.stroke){case"normal":s="fill:none;",void 0!==b&&(s=b),void 0!==g&&(n=g),a.thickness="normal",a.pattern="solid";break;case"dotted":a.thickness="normal",a.pattern="dotted",a.style="fill:none;stroke-width:2px;stroke-dasharray:3;";break;case"thick":a.thickness="thick",a.pattern="solid",a.style="stroke-width: 3.5px;fill:none;";break;case"invisible":a.thickness="invisible",a.pattern="solid",a.style="stroke-width: 0;fill:none;"}void 0!==e.style&&(t=getStylesFromArray(e.style),s=t.style,n=t.labelStyle),a.style=a.style+=s,a.labelStyle=a.labelStyle+=n,void 0!==e.interpolate?a.curve=interpolateToCurve(e.interpolate,curveLinear):void 0!==i.defaultInterpolate?a.curve=interpolateToCurve(i.defaultInterpolate,curveLinear):a.curve=interpolateToCurve(conf.curve,curveLinear),void 0===e.text?void 0!==e.style&&(a.arrowheadStyle="fill: #333"):(a.arrowheadStyle="fill: #333",a.labelpos="c"),a.labelType=e.labelType,a.label=e.text.replace(common.lineBreakRegex,"\n"),void 0===e.style&&(a.style=a.style||"stroke: #333; stroke-width: 1.5px;fill:none;"),a.labelStyle=a.labelStyle.replace("color:","fill:"),a.id=l,a.classes="flowchart-link "+r+" "+o,d.setEdge(e.start,e.end,a,c)})},getClasses=function(e,t){return t.db.getClasses()},draw=async function(e,n,t,r){log.info("Drawing flowchart");let l=r.db.getDirection();void 0===l&&(l="TD");const{securityLevel:i,flowchart:o}=getConfig();var a=o.nodeSpacing||50,s=o.rankSpacing||50;let d;"sandbox"===i&&(d=select("#i"+n));const c="sandbox"===i?select(d.nodes()[0].contentDocument.body):select("body"),p="sandbox"===i?d.nodes()[0].contentDocument:document,b=new graphlib.Graph({multigraph:!0,compound:!0}).setGraph({rankdir:l,nodesep:a,ranksep:s,marginx:0,marginy:0}).setDefaultEdgeLabel(function(){return{}});let g;var f=r.db.getSubGraphs();log.info("Subgraphs - ",f);for(let e=f.length-1;0<=e;e--)g=f[e],log.info("Subgraph - ",g),r.db.addVertex(g.id,{text:g.title,type:g.labelType},"group",void 0,g.classes,g.dir);const w=r.db.getVertices();a=r.db.getEdges();log.info("Edges",a);let u=0;for(u=f.length-1;0<=u;u--){g=f[u],selectAll("cluster").append("text");for(let e=0;e<g.nodes.length;e++)log.info("Setting up subgraphs",g.nodes[e],g.id),b.setParent(g.nodes[e],g.id)}addVertices(w,b,n,c,p,r),addEdges(a,b);s=c.select(`[id="${n}"]`),a=c.select("#"+n+" g");if(await render(a,b,["point","circle","cross"],"flowchart",n),utils.insertTitle(s,"flowchartTitleText",o.titleTopMargin,r.db.getDiagramTitle()),setupGraphViewbox(b,s,o.diagramPadding,o.useMaxWidth),r.db.indexNodes("subGraph"+u),!o.htmlLabels)for(const k of p.querySelectorAll('[id="'+n+'"] .edgeLabel .label')){var h=k.getBBox();const m=p.createElementNS("http://www.w3.org/2000/svg","rect");m.setAttribute("rx",0),m.setAttribute("ry",0),m.setAttribute("width",h.width),m.setAttribute("height",h.height),k.insertBefore(m,k.firstChild)}const y=Object.keys(w);y.forEach(function(e){const t=w[e];if(t.link){const r=select("#"+n+' [id="'+e+'"]');if(r){const l=p.createElementNS("http://www.w3.org/2000/svg","a"),o=(l.setAttributeNS("http://www.w3.org/2000/svg","class",t.classes.join(" ")),l.setAttributeNS("http://www.w3.org/2000/svg","href",t.link),l.setAttributeNS("http://www.w3.org/2000/svg","rel","noopener"),"sandbox"===i?l.setAttributeNS("http://www.w3.org/2000/svg","target","_top"):t.linkTarget&&l.setAttributeNS("http://www.w3.org/2000/svg","target",t.linkTarget),r.insert(function(){return l},":first-child")),a=r.select(".label-container"),s=(a&&o.append(function(){return a.node()}),r.select(".label"));s&&o.append(function(){return s.node()})}}})},flowRendererV2={setConf:setConf,addVertices:addVertices,addEdges:addEdges,getClasses:getClasses,draw:draw},fade=(e,t)=>{const r=khroma.channel;var l=r(e,"r"),o=r(e,"g"),e=r(e,"b");return khroma.rgba(l,o,e,t)},getStyles=e=>`.label {
    font-family: ${e.fontFamily};
    color: ${e.nodeTextColor||e.textColor};
  }
  .cluster-label text {
    fill: ${e.titleColor};
  }
  .cluster-label span,p {
    color: ${e.titleColor};
  }

  .label text,span,p {
    fill: ${e.nodeTextColor||e.textColor};
    color: ${e.nodeTextColor||e.textColor};
  }

  .node rect,
  .node circle,
  .node ellipse,
  .node polygon,
  .node path {
    fill: ${e.mainBkg};
    stroke: ${e.nodeBorder};
    stroke-width: 1px;
  }
  .flowchart-label text {
    text-anchor: middle;
  }
  // .flowchart-label .text-outer-tspan {
  //   text-anchor: middle;
  // }
  // .flowchart-label .text-inner-tspan {
  //   text-anchor: start;
  // }

  .node .label {
    text-align: center;
  }
  .node.clickable {
    cursor: pointer;
  }

  .arrowheadPath {
    fill: ${e.arrowheadColor};
  }

  .edgePath .path {
    stroke: ${e.lineColor};
    stroke-width: 2.0px;
  }

  .flowchart-link {
    stroke: ${e.lineColor};
    fill: none;
  }

  .edgeLabel {
    background-color: ${e.edgeLabelBackground};
    rect {
      opacity: 0.5;
      background-color: ${e.edgeLabelBackground};
      fill: ${e.edgeLabelBackground};
    }
    text-align: center;
  }

  /* For html labels only */
  .labelBkg {
    background-color: ${fade(e.edgeLabelBackground,.5)};
    // background-color: 
  }

  .cluster rect {
    fill: ${e.clusterBkg};
    stroke: ${e.clusterBorder};
    stroke-width: 1px;
  }

  .cluster text {
    fill: ${e.titleColor};
  }

  .cluster span,p {
    color: ${e.titleColor};
  }
  /* .cluster div {
    color: ${e.titleColor};
  } */

  div.mermaidTooltip {
    position: absolute;
    text-align: center;
    max-width: 200px;
    padding: 2px;
    font-family: ${e.fontFamily};
    font-size: 12px;
    background: ${e.tertiaryColor};
    border: 1px solid ${e.border2};
    border-radius: 2px;
    pointer-events: none;
    z-index: 100;
  }

  .flowchartTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${e.textColor};
  }
`,flowStyles=getStyles;export{flowStyles as a,flowRendererV2 as f};