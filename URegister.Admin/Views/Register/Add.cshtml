@using URegister.Core.Models.Register
@using URegister.Infrastructure.Constants
@model RegisterVM

@{
    ViewBag.Title = Model.IsInsert ? "Добавяне на регистър" : "Добавяне на администрация";
    var htmlFieldPrefix = ViewData.TemplateInfo.HtmlFieldPrefix;
    var action = Model.IsInsert ? "Add" : "AddAdministration";
    var dataIndex = Model.ContactPersons.Count;
}
<div class="ui grid">
    <form class="ui sixteen wide column" action="@Url.Action(action)" method="post" enctype="multipart/form-data">
        <div class="content">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.IsInsert)
            @Html.HiddenFor(model => model.Manager.Type)
            <div class="column ui segment green">
                <div class="ui form">
                    <div class="fields">
                        <div class='sixteen wide field'>
                            <h3>Заявител в качество на ръководител</h3>
                        </div>
                    </div>
                    <div class="fields">
                        <div class='four wide field'>
                            @Html.EditorFor(model => model.Manager.FirstName, "String")
                        </div>
                        <div class='four wide field'>
                            @Html.EditorFor(model => model.Manager.MiddleName, "String")
                        </div>
                        <div class='four wide field'>
                            @Html.EditorFor(model => model.Manager.LastName, "String")
                        </div>
                        <div class='four wide field'>
                            @Html.EditorFor(model => model.Manager.Position, "String")
                        </div>
                    </div>
                    <div class="fields">
                        <div class="four wide field">
                            @Html.EditorFor(model => model.Administration.Uic)
                        </div>
                        <div class="twelve wide field">
                            @Html.EditorFor(model => model.Administration.Name)
                        </div>
                    </div>
                    <div class="fields">
                        <div class='eight wide field'>
                            @Html.EditorFor(model => model.Manager.Phone, "String")
                        </div>
                        <div class='eight wide field'>
                            @Html.EditorFor(model => model.Manager.Email, "String")
                        </div>
                    </div>
                </div>
                <div class="ui form">
                    <fieldset>
                        <legend>
                            <b>&nbsp; Оторозирани лица &nbsp;</b>
                        </legend>
                        <div id="ContactPersonList" class="ui compact grid dynamic-form-container contacts-container" data-index="@dataIndex" data-prefix="@htmlFieldPrefix">
                            @for (int i = 0; i < Model.ContactPersons.Count; i++)
                            {
                                Model.ContactPersons[i].Index = i;
                                ViewData.TemplateInfo.HtmlFieldPrefix = $"ContactPersons[{i}]";
                                await Html.RenderPartialAsync("_Person", Model.ContactPersons[i]);
                                ViewData.TemplateInfo.HtmlFieldPrefix = htmlFieldPrefix;
                            }
                        </div>
                        <div class="ui fluid container basic clearing segment"></div>
                        <div class="ui buttons right floated">
                            <button type="button" class=" ui button add-item" data-url="@Url.Action("AddContactPerson")" data-container-id="ContactPersonList">
                                <i class="add icon"></i>
                                Добави
                            </button>
                        </div>

                    </fieldset>
                </div>
            </div>

            <div class="column ui segment green">
                <div class="ui form">
                    <div class="fields">
                        <div class='sixteen wide field'>
                            <h3>ЗАЯВЯВАМ ЗА ИЗГРАЖДАНЕ СЛЕДНИЯТ РЕГИСТЪР</h3>
                        </div>
                    </div>
                    <div class="fields">
                        <div class='four wide field'>
                            @Html.EditorFor(model => model.Code, "StringDisabled")
                        </div>
                        <div class='twelve wide field'>
                            @Html.EditorFor(model => model.Name, "String")
                        </div>
                    </div>
                    <div class="fields">
                        <div class="sixteen wide field">
                            @Html.EditorFor(model => model.Description)
                        </div>
                    </div>
                    <div class="fields">
                        <div class="sixteen wide field">
                            @Html.EditorFor(model => model.LegalBasis, "TextArea")
                        </div>
                    </div>
                    <div class="fields">
                        <div class='four wide field'>
                            @Html.EditorFor(model => model.Type, "DropDown", new { Ddl = ViewData[$"{InternalNomenclatureTypes.RegisterType}_ddl"] })
                        </div>
                        <div class='four wide field'>
                            @Html.EditorFor(model => model.TypeEntry, "DropDown", new { Ddl = ViewData[$"{InternalNomenclatureTypes.RegisterEntryType}_ddl"] })
                        </div>
                        <div class='eight wide field'>
                            @Html.EditorFor(model => model.IdentitySecurityLevel, "DropDown", new { Ddl = ViewData[$"{InternalNomenclatureTypes.RegisterIdentitySecurityLevel}_ddl"] })
                        </div>
                    </div>
                </div>
            </div>
            @await Html.PartialAsync("_BackSubmitButton", @Url.Action("Index"))
        </div>
    </form>
</div>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}